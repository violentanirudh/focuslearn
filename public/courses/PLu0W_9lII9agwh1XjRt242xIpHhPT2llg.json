{"course":{"lectures":[{"description":"Dive into the exciting world of programming with Python! This lecture introduces the fundamentals of programming, setting the stage for your journey with Python. Learn about the concept of computer programs, their role in our digital lives, and why Python is a popular choice for beginners and seasoned programmers alike.","title":"Introduction to Programming & Python","embed":"https://www.youtube.com/embed/7wnove7K-ZQ","duration":710},{"description":"Welcome to Python Tutorial - Day #1! This lecture is your first step into the world of Python. Learn the basics of setting up your Python environment, writing your first simple Python program, and understanding the core concepts of variables and data types. Get ready to embark on your coding adventure!","title":"Python Tutorial - Day #1","embed":"https://www.youtube.com/embed/Tto8TS-fJQU","duration":518},{"description":"In this lecture, we'll explore the power of Python through practical examples. You'll discover how to write programs that perform fascinating tasks, like generating random numbers, converting units, and creating interactive games. Witness the versatility of Python in action!","title":"Some Amazing Python Programs - The Power of Python","embed":"https://www.youtube.com/embed/xwKO_y2gHxQ","duration":761},{"description":"Day #2 of our Python journey brings us to the concept of modules. Learn how to use pre-built modules to extend the capabilities of your Python programs. We'll cover the essential module 'math' and how to import it for mathematical calculations. Get ready to harness the power of Python's vast library!","title":"Python Tutorial - Day #2","embed":"https://www.youtube.com/embed/7IWOYhfAcVg","duration":444},{"description":"Welcome to Day #3 of our Python tutorial! Today, we introduce the essential 'pip' tool, which enables you to install and manage additional Python packages. Discover how to install packages, access their documentation, and leverage their functionalities to create more sophisticated programs. Expand your Python toolkit!","title":"Modules and Pip","embed":"https://www.youtube.com/embed/qxPMmW93eDs","duration":1122},{"description":"In this lecture, we finally create our first Python program! Learn the fundamental syntax of Python to write a program that prints 'Hello, World!'.  This simple program will be your stepping stone to more complex projects.  Let's code!","title":"Our First Python Program","embed":"https://www.youtube.com/embed/ORCuz7s5cCY","duration":1005},{"description":"Day #4 of our Python adventure focuses on understanding comments and escape sequences. We'll explore how to add comments to your code for clarity and readability, and learn about escape sequences that allow you to include special characters in your output. Make your code more expressive and efficient!","title":"Comments, Escape Sequences & Print Statement","embed":"https://www.youtube.com/embed/FLVqcxnJP_E","duration":410},{"description":"Welcome to Day #6 of our Python tutorial! Today, we delve into the crucial concept of variables and data types. Learn how to store and manipulate data using variables, and understand the different data types Python supports, such as integers, floats, and strings. This knowledge is fundamental to building dynamic and powerful Python programs.","title":"Variables and Data Types","embed":"https://www.youtube.com/embed/dohaSBCKCr0","duration":622},{"description":"Let's put our Python skills to the test with a practical exercise! In this lecture, we'll create a simple calculator using Python. You'll learn how to take user input, perform basic arithmetic operations, and display the results.  Sharpen your programming skills and see Python in action!","title":"Exercise 1: Calculator using Python","embed":"https://www.youtube.com/embed/Pu5bqySSSS0","duration":565},{"description":"Day #7 of our Python tutorial is dedicated to solving Exercise 1: Calculator using Python. We'll provide a detailed solution, breaking down the code and explaining each step.  Learn from our implementation and gain valuable insights into creating practical Python applications.","title":"Exercise 1: Calculator using Python (Solution)","embed":"https://www.youtube.com/embed/WvG-R-xXouA","duration":616},{"description":"Day #9 of our Python tutorial explores the crucial concept of typecasting. We'll learn how to convert data from one type to another, enabling us to perform operations and manipulate data more effectively. Discover the power of Python's built-in typecasting functions.","title":"Typecasting in Python","embed":"https://www.youtube.com/embed/kMNFQYArrLg","duration":695},{"description":"Day #10 of our Python adventure delves into user input. Learn how to write programs that interact with users, taking input and providing tailored outputs.  Explore various methods for getting input from the user, making your Python programs more dynamic and engaging.","title":"Taking User Input in Python","embed":"https://www.youtube.com/embed/8jW7lpT8HW8","duration":708},{"description":"Welcome to Day #11 of our Python tutorial! Today, we focus on strings, a fundamental data type in Python. Learn how to create strings, manipulate them with operations like concatenation and repetition, and access individual characters within strings.  Unlock the power of working with text data in Python.","title":"Strings in Python","embed":"https://www.youtube.com/embed/0INvoK_T0cE","duration":1352},{"description":"In this lecture, we dive deeper into string manipulation.  Explore the techniques of string slicing, which allows you to extract specific portions of a string, and various operations you can perform on strings, such as finding substrings and replacing characters. Master the art of working with strings!","title":"Strings Slicing and Operations on Strings in Python","embed":"https://www.youtube.com/embed/ceiuLR2ysas","duration":1167},{"description":"Day #13 of our Python journey focuses on string methods.  Discover a rich set of methods that provide convenient ways to manipulate and work with strings. Learn about methods for formatting, searching, and modifying strings, making your code more efficient and elegant.","title":"String Methods in Python","embed":"https://www.youtube.com/embed/d7ng_aV4qdI","duration":319},{"description":"Welcome to Day #14 of our Python tutorial! Today, we introduce the powerful 'if-else' conditional statements. Learn how to create programs that make decisions based on specific conditions.  Explore the syntax and usage of 'if', 'else', and 'elif' statements, adding dynamic behavior to your Python programs.","title":"If Else Conditional Statements in Python","embed":"https://www.youtube.com/embed/bthQCK1QAmQ","duration":491},{"description":"Challenge yourself with Exercise 2: Good Morning Sir! In this lecture, we present a fun exercise where you need to write a program that prints a greeting based on the current time.  Put your Python knowledge to the test and practice writing conditional statements.","title":"Exercise 2: Good Morning Sir","embed":"https://www.youtube.com/embed/fIYVzKp0q5w","duration":781},{"description":"Day #16 of our Python tutorial introduces the 'match-case' statements, a powerful tool for pattern matching.  Learn how to use 'match-case' to create elegant and readable code for handling multiple conditions.  Enhance your Python skills with this versatile feature.","title":"Match Case Statements in Python","embed":"https://www.youtube.com/embed/-tCFyIyKVx0","duration":850},{"description":"Welcome to Day #17 of our Python tutorial! Today, we explore the fundamental 'for' loop.  Learn how to iterate over a sequence of items using 'for' loops, performing actions on each item.  Discover the power of iteration and its importance in writing efficient Python programs.","title":"For Loops in Python","embed":"https://www.youtube.com/embed/RkwJnjdrm70","duration":734},{"description":"In this lecture, we delve into the 'while' loop, another powerful tool for iteration. Learn how to use 'while' loops to repeat actions until a certain condition is met.  Understand the difference between 'for' and 'while' loops and choose the appropriate loop for your task.","title":"While Loops in Python","embed":"https://www.youtube.com/embed/dyvxxJSGUsE","duration":978},{"description":"Day #19 of our Python journey explores the 'break' and 'continue' statements. Learn how to control the flow of your loops using these statements.  Discover how to exit a loop prematurely with 'break' or skip specific iterations with 'continue'.  Master the art of loop control.","title":"break and continue in Python","embed":"https://www.youtube.com/embed/0d6b6fFuCkE","duration":830},{"description":"Welcome to Day #20 of our Python tutorial! Today, we introduce the concept of functions. Learn how to create reusable blocks of code that perform specific tasks. Understand the benefits of using functions and how they make your programs more organized and maintainable.","title":"Functions in Python","embed":"https://www.youtube.com/embed/eF6nK5bSlmg","duration":1207},{"description":"In this lecture, we delve deeper into functions, focusing on function arguments. Learn how to pass values to functions, allowing them to perform operations on different inputs. Understand the concepts of positional and keyword arguments, and how to define functions that accept variable numbers of arguments. Enhance your Python programming skills!","title":"Function Arguments in Python","embed":"https://www.youtube.com/embed/scWc3F8LbOo","duration":572},{"description":"Day #22 of our Python adventure introduces you to lists, one of the most versatile data structures in Python. Learn how to create lists, add and remove elements, access elements by index, and manipulate lists using various methods.  Master the art of working with lists, a fundamental skill for any Python programmer.","title":"Introduction to Lists in Python","embed":"https://www.youtube.com/embed/PipsOUDKrVk","duration":495},{"description":"In this lecture, we explore the powerful methods available for manipulating lists. Discover methods for sorting lists, searching for elements, and performing various other operations.  Enhance your list manipulation skills and write more efficient and elegant Python code.","title":"List Methods in Python","embed":"https://www.youtube.com/embed/XblLSduioJI","duration":419},{"description":"Welcome to Day #24 of our Python tutorial! Today, we introduce tuples, another essential data structure in Python.  Learn how to create tuples, access elements, and understand the key difference between tuples and lists.  Discover the benefits of using tuples in specific situations.","title":"Tuples in Python","embed":"https://www.youtube.com/embed/IZBKXWrbqBM","duration":462},{"description":"In this lecture, we explore various operations that can be performed on tuples. Discover how to concatenate tuples, access elements, and perform other manipulations. While tuples are immutable, we'll learn how to work with them effectively.","title":"Operations on Tuples in Python","embed":"https://www.youtube.com/embed/Vs1Z7K70Mvw","duration":167},{"description":"Day #26 of our Python journey is dedicated to the solution of Exercise 2, and we'll also be giving a shoutout to the amazing community!  Explore the detailed solution of the exercise and join in the celebration of coding success.  Stay tuned for more exciting challenges!","title":"Exercise 2: Solution & Shoutouts","embed":"https://www.youtube.com/embed/ixmxgUf8yIg","duration":532},{"description":"Get ready for Exercise 3: Kaun Banega Crorepati (KBC)! This exciting exercise challenges you to build a simple 'Who Wants to Be a Millionaire' game in Python.  Use your knowledge of lists, user input, and conditional statements to create a fun and engaging game.","title":"Exercise 3: Kaun Banega Crorepati (KBC)","embed":"https://www.youtube.com/embed/SJzsNd7SM0g","duration":512},{"description":"Day #28 of our Python tutorial introduces the powerful 'f-strings'.  Learn how to use 'f-strings' to format strings efficiently and dynamically insert variables into strings.  Simplify your code and make it more readable with this handy technique.","title":"f-strings in Python","embed":"https://www.youtube.com/embed/XYwJKFB8DUk","duration":601},{"description":"In this lecture, we explore the concept of docstrings, a crucial part of writing well-documented Python code.  Learn how to write docstrings to describe the purpose and functionality of your functions, classes, and modules.  Make your code easily understandable and maintainable for yourself and others.","title":"Docstrings in Python","embed":"https://www.youtube.com/embed/l3kCO8cVA6o","duration":472},{"description":"Day #30 of our Python journey takes us to the concept of recursion.  Explore the powerful technique of recursion, where functions call themselves to solve problems. Understand how to write recursive functions and their applications in solving complex problems elegantly.","title":"Recursion in Python","embed":"https://www.youtube.com/embed/HOrutCnp2zo","duration":958},{"description":"Welcome to Day #31 of our Python tutorial! Today, we introduce sets, another important data structure in Python.  Learn how to create sets, add and remove elements, and understand the unique properties of sets, such as their unordered nature and lack of duplicate elements.  Discover the power of sets in solving specific problems.","title":"Sets in Python","embed":"https://www.youtube.com/embed/j2G68uQtOwM","duration":620},{"description":"In this lecture, we delve into the various methods available for manipulating sets.  Discover methods for adding and removing elements, finding intersections and unions, and performing other operations on sets.  Enhance your set manipulation skills and write more efficient and expressive Python code.","title":"Set Methods in Python","embed":"https://www.youtube.com/embed/LmbFwaLjT9k","duration":507},{"description":"Day #33 of our Python adventure introduces dictionaries, a versatile data structure that allows you to store data as key-value pairs. Learn how to create dictionaries, add and access elements, and use dictionaries to efficiently represent and retrieve data. Master the art of working with dictionaries, a fundamental skill for any Python programmer.","title":"Dictionaries in Python","embed":"https://www.youtube.com/embed/qUkcIgErZzc","duration":393},{"description":"In this lecture, we explore the powerful methods available for manipulating dictionaries. Discover methods for adding and removing elements, updating values, and performing various other operations. Enhance your dictionary manipulation skills and write more efficient and elegant Python code.","title":"Dictionary Methods in Python","embed":"https://www.youtube.com/embed/4LKo6dlku7M","duration":653},{"description":"Day #35 of our Python journey focuses on the combination of 'for' loops and the 'else' statement. Learn how to use 'for' loops with 'else' to execute code after the loop completes successfully.  Explore the practical applications of this combination and enhance your control over loop execution.","title":"for Loop with else in Python","embed":"https://www.youtube.com/embed/r_iuC-IDpPM","duration":485},{"description":"Welcome to Day #36 of our Python tutorial! Today, we delve into the essential concept of exception handling. Learn how to handle errors that may occur during program execution, preventing your program from crashing.  Explore the 'try', 'except', and 'else' blocks and their roles in managing exceptions.","title":"Exception Handling in Python","embed":"https://www.youtube.com/embed/Phr4CNppYoM","duration":642},{"description":"In this lecture, we explore the 'finally' keyword, an important aspect of exception handling.  Learn how to use 'finally' to execute code regardless of whether an exception was raised or handled.  Understand the scenarios where 'finally' is useful and enhance your exception handling skills.","title":"Finally keyword in Python","embed":"https://www.youtube.com/embed/nyfeYAxP-EM","duration":1396},{"description":"Day #38 of our Python adventure focuses on raising custom errors.  Learn how to define your own custom exceptions, providing more specific and informative error messages in your programs.  Improve error handling and create more robust and user-friendly applications.","title":"Raising custom errors in Python","embed":"https://www.youtube.com/embed/pOWJ6WgVRIU","duration":365},{"description":"Day #39 of our Python journey is dedicated to the solution of Exercise 3: Kaun Banega Crorepati. We'll provide a detailed solution, breaking down the code and explaining each step.  Learn from our implementation and gain valuable insights into creating engaging Python games.","title":"Kaun Banega Crorepati: Exercise 3 - Solution & Shoutouts","embed":"https://www.youtube.com/embed/Qqx_zNmQVGI","duration":463},{"description":"Challenge yourself with Exercise 4: Secret Code Language! In this lecture, we present a fun exercise where you need to write a program that encrypts and decrypts messages using a simple substitution cipher.  Put your Python knowledge to the test and practice working with strings and dictionaries.","title":"Exercise 4: Secret Code Language","embed":"https://www.youtube.com/embed/kGnYc_h1geM","duration":457},{"description":"Day #41 of our Python tutorial introduces the concept of shorthand 'if-else' statements.  Learn how to write concise and elegant code for conditional statements using the ternary operator.  Enhance your code readability and efficiency with this handy technique.","title":"Short hand if else statements","embed":"https://www.youtube.com/embed/nt6LlFTWOkg","duration":1298},{"description":"In this lecture, we explore the 'enumerate' function, a powerful tool for iterating over sequences with both index and value.  Learn how to use 'enumerate' to easily access both the index and value of each item in a sequence.  Simplify your code and make it more readable with this handy technique.","title":"Enumerate Function in Python","embed":"https://www.youtube.com/embed/Pr7UOr35NcI","duration":762},{"description":"Day #43 of our Python journey delves into the concept of virtual environments. Learn how to create and use virtual environments to isolate your Python projects and their dependencies, ensuring consistency and avoiding conflicts.  Master the art of managing dependencies effectively.","title":"Virtual Environment in Python","embed":"https://www.youtube.com/embed/y_CX2Rvitk8","duration":564},{"description":"Welcome to Day #44 of our Python tutorial! Today, we explore how the 'import' statement works in Python.  Learn the different ways to import modules and packages, understanding the search path and how to control the scope of imported elements.  Enhance your Python knowledge with this essential concept.","title":"How import works in Python","embed":"https://www.youtube.com/embed/dkVYSsL90Oo","duration":924},{"description":"In this lecture, we introduce the powerful 'if __name__ == \"__main__\"' condition.  Learn how this condition helps you control which parts of your code are executed when the script is run directly and when it is imported as a module.  Master the art of writing modular and reusable Python code.","title":"if __name__ == \"__main__\" in Python","embed":"https://www.youtube.com/embed/4lSQfOJKn7U","duration":1171},{"description":"Day #46 of our Python adventure focuses on the 'os' module. Learn how to interact with the operating system using the 'os' module. Discover functions for manipulating files and directories, obtaining system information, and running commands.  Expand your Python toolkit with these powerful capabilities.","title":"os Module in Python","embed":"https://www.youtube.com/embed/RaG6GgcDt54","duration":637},{"description":"Day #47 of our Python journey is dedicated to the solution of Exercise 4, and we'll also be giving a shoutout to the amazing community!  Explore the detailed solution of the exercise and join in the celebration of coding success.  Stay tuned for more exciting challenges!","title":"Exercise 4: Solutions and Shoutouts","embed":"https://www.youtube.com/embed/eDBPlcWYses","duration":773},{"description":"In this lecture, we delve into the crucial concept of local and global variables in Python.  Learn the difference between variables defined within functions (local) and variables defined outside functions (global).  Understand the scope of variables and how to interact with them effectively.  Master the art of managing variables in your Python programs.","title":"Local vs Global Variables in Python","embed":"https://www.youtube.com/embed/l1FsnQxET9U","duration":647},{"description":"Day #49 of our Python tutorial introduces file input/output (I/O).  Learn how to read data from files and write data to files using Python.  Discover the power of file operations and how to manipulate data stored in files.  Expand your Python toolkit with this essential skill.","title":"File IO in Python","embed":"https://www.youtube.com/embed/PByYX-2l5Us","duration":467},{"description":"In this lecture, we explore various methods for reading data from files.  Learn about the 'read()', 'readlines()', and other methods for accessing file contents.  Understand the difference between these methods and choose the appropriate one for your task.  Master the art of file reading in Python.","title":"read(), readlines() and other methods","embed":"https://www.youtube.com/embed/UfFWf-PXUqE","duration":558},{"description":"Day #51 of our Python journey focuses on the 'seek()' and 'tell()' functions, which enable you to navigate within files. Learn how to move the file pointer to specific positions and retrieve the current position.  Master the art of file navigation and write more efficient and flexible Python code.","title":"seek(), tell() and other functions","embed":"https://www.youtube.com/embed/OErhjT4f5Cs","duration":781},{"description":"Welcome to Day #52 of our Python tutorial! Today, we introduce lambda functions, also known as anonymous functions.  Learn how to create small, unnamed functions in a single line of code.  Discover the power of lambda functions and their applications in various scenarios.  Enhance your Python code with this concise and elegant technique.","title":"Lambda functions in Python","embed":"https://www.youtube.com/embed/TOemdfX_0xc","duration":481},{"description":"In this lecture, we explore the powerful 'map', 'filter', and 'reduce' functions in Python. Learn how to use these functions to apply operations to elements in a sequence, filter elements based on conditions, and combine elements into a single value, respectively.  Enhance your Python programming skills with these versatile tools.","title":"Map, Filter and Reduce in Python","embed":"https://www.youtube.com/embed/dDsh7FT6-0I","duration":355},{"description":"Day #54 of our Python journey delves into the subtle difference between the 'is' and '==' operators.  Learn how these operators compare objects and values.  Understand the scenarios where each operator is appropriate and avoid common pitfalls.  Master the art of comparing objects in Python.","title":"is' vs '==' in Python","embed":"https://www.youtube.com/embed/HQnoYzxOHMw","duration":954},{"description":"Challenge yourself with Exercise 5 - Snake Water Gun! In this lecture, we present a classic game of rock-paper-scissors (snake-water-gun) that you need to implement in Python. Use your knowledge of user input, conditional statements, and random number generation to create a fun and engaging game.","title":"Exercise 5 - Snake Water Gun","embed":"https://www.youtube.com/embed/a7baAGCBA9U","duration":572},{"description":"Welcome to Day #56 of our Python tutorial! Today, we begin our journey into Object-Oriented Programming (OOP) in Python.  Learn the fundamental concepts of OOP, such as objects, classes, and encapsulation.  Discover the advantages of OOP and how it helps you write more organized and maintainable code.","title":"Introduction to OOPs in Python","embed":"https://www.youtube.com/embed/12HRkYld22c","duration":677},{"description":"In this lecture, we delve into the core components of OOP: classes and objects.  Learn how to define classes that represent blueprints for creating objects. Understand the relationship between classes and objects and how to interact with them.  Master the art of defining and using classes and objects in your Python programs.","title":"Classes and Objects in Python","embed":"https://www.youtube.com/embed/PTBZ674EsvI","duration":785},{"description":"Day #58 of our Python adventure focuses on constructors, special methods used to initialize objects.  Learn how to define constructors and how they are automatically called when objects are created. Understand the importance of constructors in initializing object state and setting up initial values.","title":"Constructors in Python","embed":"https://www.youtube.com/embed/2gbCT8h9uyk","duration":637},{"description":"Welcome to Day #59 of our Python tutorial! Today, we introduce decorators, a powerful tool for modifying the behavior of functions. Learn how to create decorators and apply them to functions to add functionality without directly altering the original function code.  Enhance your Python code with this elegant and flexible technique.","title":"Decorators in Python","embed":"https://www.youtube.com/embed/-KsfUaQEY9Y","duration":454},{"description":"In this lecture, we explore the concept of getters and setters, methods used to control access to object attributes.  Learn how to define getters and setters to ensure data integrity and enforce specific rules for accessing and modifying attributes.  Master the art of managing object state using getters and setters.","title":"Getters and Setters in Python","embed":"https://www.youtube.com/embed/43FK20rWvKQ","duration":703},{"description":"Day #61 of our Python journey delves into inheritance, a powerful concept that allows classes to inherit properties and methods from parent classes.  Learn how to create child classes that inherit from parent classes, reducing code duplication and promoting code reusability.  Master the art of inheriting properties and methods in Python.","title":"Inheritance in Python","embed":"https://www.youtube.com/embed/GkfBpm6MN9A","duration":928},{"description":"In this lecture, we explore access modifiers, which control the visibility of attributes and methods within classes.  Learn about public, protected, and private modifiers and how they influence the accessibility of class members.  Master the art of managing access control in Python.","title":"Access Modifiers in Python","embed":"https://www.youtube.com/embed/mlDZTSH2FFc","duration":195},{"description":"Day #63 of our Python journey is dedicated to the solution of Exercise 5: Snake Water Gun. We'll provide a detailed solution, breaking down the code and explaining each step.  Learn from our implementation and gain valuable insights into creating fun and interactive Python games.","title":"Snake Water Gun Game in Python - Exercise 5 - Solution","embed":"https://www.youtube.com/embed/GcSVYNSsJxo","duration":457},{"description":"Challenge yourself with Exercise 6 - Library Management System in Python! In this lecture, we present a more complex exercise where you need to build a basic library management system using Python.  Put your OOP knowledge to the test and practice working with classes, objects, and inheritance.","title":"Exercise 6 - Library Management System in Python","embed":"https://www.youtube.com/embed/tQdaeiF4j38","duration":877},{"description":"Day #65 of our Python tutorial introduces static methods. Learn how to define static methods within classes, which are associated with the class itself rather than specific objects.  Understand the difference between static methods and instance methods, and explore their applications.","title":"Static Methods in Python","embed":"https://www.youtube.com/embed/uRIEjf2vCIg","duration":574},{"description":"In this lecture, we explore the difference between instance variables and class variables in Python.  Learn how instance variables are specific to each object, while class variables are shared across all objects of a class.  Understand the scope and usage of instance and class variables in your Python programs.","title":"Instance variables vs Class variables in Python","embed":"https://www.youtube.com/embed/6KvnP13TnhY","duration":214},{"description":"Day #67 of our Python journey is dedicated to the solution of Exercise 6: Library Management System. We'll provide a detailed solution, breaking down the code and explaining each step.  Learn from our implementation and gain valuable insights into building practical Python applications.","title":"Exercise 6 Solution - Library Management Software in Python","embed":"https://www.youtube.com/embed/9ynmDLc5FYo","duration":385},{"description":"Challenge yourself with Exercise 7 - Clear the Clutter! In this lecture, we present an exercise where you need to write a Python program that organizes files and folders based on their extensions.  Put your OOP and file handling knowledge to the test and practice working with classes, objects, and file operations.","title":"Exercise 7 - Clear the Clutter","embed":"https://www.youtube.com/embed/FGlKJdy--p8","duration":786},{"description":"Day #69 of our Python tutorial introduces class methods. Learn how to define class methods within classes, which are also associated with the class itself rather than specific objects.  Understand the difference between static methods and class methods, and explore their applications.","title":"Class Methods in Python","embed":"https://www.youtube.com/embed/Wgo9TaBcuJ4","duration":443},{"description":"In this lecture, we explore how class methods can be used as alternative constructors in Python.  Learn how to create custom constructors using class methods, allowing you to initialize objects in different ways.  Enhance your OOP skills with this flexible technique.","title":"Class Methods as Alternative Constructors in Python","embed":"https://www.youtube.com/embed/P648reefNh0","duration":548},{"description":"Day #71 of our Python journey explores the 'dir', '__dict__', and 'help' methods, which provide valuable information about objects and classes. Learn how to use these methods to inspect the attributes and methods of objects, understand the internal structure of classes, and access documentation.  Master the art of introspection and debugging in Python.","title":"dir, __dict__ and help method in Python","embed":"https://www.youtube.com/embed/DmgQVJXhuLQ","duration":732},{"description":"Welcome to Day #72 of our Python tutorial! Today, we introduce the 'super' keyword, a powerful tool for accessing methods from parent classes within child classes.  Learn how to use 'super' to simplify code and promote code reusability.  Enhance your OOP skills with this handy technique.","title":"super keyword in Python","embed":"https://www.youtube.com/embed/46_yfYC36JY","duration":387},{"description":"In this lecture, we delve into the fascinating world of magic/dunder methods.  Learn about special methods, identified by double underscores (e.g., __init__, __str__), that provide built-in functionality for objects.  Discover the power of magic methods and how they enhance the behavior of your classes.","title":"Magic/Dunder Methods in Python","embed":"https://www.youtube.com/embed/Wt9Shnzv_Yg","duration":732},{"description":"Day #74 of our Python adventure focuses on method overriding, a key concept in inheritance. Learn how child classes can override methods inherited from parent classes, providing customized behavior.  Understand the purpose and benefits of method overriding, and how it allows you to tailor the functionality of your classes.","title":"Method Overriding in Python","embed":"https://www.youtube.com/embed/uUbvJ7ZEhPE","duration":194},{"description":"Day #75 of our Python journey is dedicated to the solution of Exercise 7, and we'll also be giving a shoutout to the amazing community!  Explore the detailed solution of the exercise and join in the celebration of coding success.  Stay tuned for more exciting challenges!","title":"Exercise 7 Solution + Shoutouts","embed":"https://www.youtube.com/embed/D67-b2t-y4k","duration":444},{"description":"Challenge yourself with Exercise 8 - Merge the PDF! In this lecture, we present an exercise where you need to write a Python program that merges multiple PDF files into a single PDF file.  Put your file handling and external library knowledge to the test and practice using the 'PyPDF2' library.","title":"Exercise 8 - Merge the PDF","embed":"https://www.youtube.com/embed/U53_Gw55NI8","duration":279},{"description":"Day #77 of our Python tutorial explores operator overloading, a powerful technique that allows you to define custom behavior for operators (like +, -, *) when applied to your own objects. Learn how to overload operators and extend the functionality of your classes.","title":"Operator Overloading in Python","embed":"https://www.youtube.com/embed/4o7xSHgKlvI","duration":371},{"description":"In this lecture, we delve into single inheritance, a fundamental concept in OOP where a child class inherits properties and methods from a single parent class.  Learn how to create child classes that inherit from single parent classes and understand the advantages of single inheritance.","title":"Single Inheritance in Python","embed":"https://www.youtube.com/embed/Il7XMJJeXiA","duration":474},{"description":"Day #79 of our Python journey focuses on multiple inheritance, a powerful technique where a child class can inherit properties and methods from multiple parent classes.  Learn how to create child classes that inherit from multiple parent classes and understand the complexities and potential conflicts that may arise.","title":"Multiple Inheritance in Python","embed":"https://www.youtube.com/embed/B4Q8zxRkm_I","duration":534},{"description":"Welcome to Day #80 of our Python tutorial! Today, we explore multilevel inheritance, another common inheritance pattern where a child class inherits from a parent class, which itself inherits from another parent class.  Learn how to create multilevel inheritance structures and understand the flow of inheritance.","title":"Multilevel Inheritance in Python","embed":"https://www.youtube.com/embed/qKKGemhBRVM","duration":471},{"description":"In this lecture, we delve into the concepts of hybrid and hierarchical inheritance, two additional inheritance patterns.  Learn how hybrid inheritance combines multiple inheritance patterns, and how hierarchical inheritance involves multiple child classes inheriting from a single parent class.  Master the art of choosing the appropriate inheritance pattern for your needs.","title":"Hybrid and Hierarchical Inheritance in Python","embed":"https://www.youtube.com/embed/1WjwnlRXfHc","duration":228},{"description":"Day #82 of our Python journey is dedicated to the solution of Exercise 8: Merge the PDF. We'll provide a detailed solution, breaking down the code and explaining each step.  Learn from our implementation and gain valuable insights into working with external libraries and PDF manipulation.","title":"Exercise 8 - Merge the Pdf Solution in Python","embed":"https://www.youtube.com/embed/oTtIvV-Q1FY","duration":697},{"description":"Day #83 of our Python journey is dedicated to giving shoutouts to everyone in the community! We'll celebrate our collective success and acknowledge the hard work and dedication of all the learners and contributors. Join us in this celebration of knowledge and growth.","title":"Exercise 9 - Shoutouts to Everyone","embed":"https://www.youtube.com/embed/3IAu6-pgw7I","duration":1112},{"description":"Welcome to Day #84 of our Python tutorial! Today, we explore the 'time' module, a powerful tool for working with time and dates in Python. Learn how to retrieve current time, format dates and times, calculate time differences, and schedule tasks using the 'time' module. Expand your Python toolkit with these essential functionalities.","title":"Time Module in Python","embed":"https://www.youtube.com/embed/NCmMEEyzLT8","duration":576},{"description":"In this lecture, we delve into the world of command-line utilities, learning how to create interactive command-line tools using Python.  Discover how to take user input from the command line, process data, and display outputs.  Master the art of building powerful and user-friendly command-line applications.","title":"Creating command line utility in python","embed":"https://www.youtube.com/embed/wII2JhNACJE","duration":762},{"description":"Day #86 of our Python adventure focuses on the walrus operator, a new operator introduced in Python 3.8. Learn how to use the walrus operator to assign values to variables within expressions.  Discover the benefits of this operator and how it simplifies your code in certain scenarios.","title":"Walrus Operator in Python","embed":"https://www.youtube.com/embed/C9VP-56RXNM","duration":734},{"description":"Welcome to Day #87 of our Python tutorial! Today, we explore the 'shutil' module, a powerful tool for managing files and directories.  Learn how to copy, move, delete, and rename files and directories using the 'shutil' module.  Expand your Python toolkit with these essential file system manipulation capabilities.","title":"Shutil Module in Python","embed":"https://www.youtube.com/embed/Nsb3bLIlO4w","duration":526},{"description":"Day #88 of our Python journey is dedicated to the solution of Exercise 9, and we'll also be giving a shoutout to the amazing community!  Explore the detailed solution of the exercise and join in the celebration of coding success.  Stay tuned for more exciting challenges!","title":"Exercise 9: Solution - Shoutouts to Everyone","embed":"https://www.youtube.com/embed/BGzFp9mwFQ4","duration":274},{"description":"Welcome to Day #89 of our Python tutorial! Today, we introduce the 'requests' module, a powerful tool for making HTTP requests in Python. Learn how to send GET and POST requests, retrieve data from websites, and interact with web APIs using the 'requests' module. Expand your Python toolkit with these essential web functionalities.","title":"Requests Module in Python","embed":"https://www.youtube.com/embed/ixd-u3pmsUc","duration":527},{"description":"Challenge yourself with Exercise 10: News App in Python! In this lecture, we present a more complex exercise where you need to build a simple news app that fetches news headlines from an API using the 'requests' module.  Put your web programming knowledge to the test and practice working with APIs.","title":"Exercise 10: News App in Python","embed":"https://www.youtube.com/embed/K8gjSwc3Rlo","duration":674},{"description":"Day #91 of our Python journey introduces generators, a special type of function that generates a sequence of values on demand. Learn how to create generators and understand their benefits, such as efficient memory usage and lazy evaluation.  Master the art of creating generators and using them in your Python programs.","title":"Generators in Python","embed":"https://www.youtube.com/embed/bnAz7Kb2efE","duration":691},{"description":"In this lecture, we explore the concept of function caching, a technique for improving the performance of your code by storing the results of function calls.  Learn how to use caching to avoid redundant computations and enhance the speed of your programs.  Master the art of optimizing code performance with caching.","title":"Function Caching in Python","embed":"https://www.youtube.com/embed/1i4piFhpnm8","duration":260},{"description":"Day #93 of our Python journey is dedicated to the solution of Exercise 10: News App. We'll provide a detailed solution, breaking down the code and explaining each step.  Learn from our implementation and gain valuable insights into building web-based applications with Python.","title":"Exercise 10 - News App Solution & Shoutout","embed":"https://www.youtube.com/embed/TCWOwavqFrw","duration":783},{"description":"Challenge yourself with Exercise 11 - Drink Water Reminder! In this lecture, we present an exercise where you need to write a Python program that reminds you to drink water at regular intervals.  Put your time management and notification skills to the test and practice working with the 'plyer' library.","title":"Exercise 11 - Drink Water Reminder","embed":"https://www.youtube.com/embed/lgoB3_-ejnI","duration":629},{"description":"Day #95 of our Python tutorial delves into the world of regular expressions (regex).  Learn how to use regular expressions to search, match, and manipulate text patterns.  Master the art of pattern matching and write more powerful and flexible text processing code in Python.","title":"Regular Expressions in Python","embed":"https://www.youtube.com/embed/ICbU6zAKtqQ","duration":1069},{"description":"In this lecture, we explore the 'asyncio' library, a powerful tool for writing asynchronous code in Python. Learn how to handle multiple tasks concurrently without blocking the main thread.  Master the art of writing efficient and scalable code with 'asyncio'.","title":"AsyncIO in Python","embed":"https://www.youtube.com/embed/zGe-9LfnAaA","duration":1204},{"description":"Day #97 of our Python journey focuses on multithreading, a technique for running multiple threads concurrently within a single process.  Learn how to create and manage threads, and understand the benefits and challenges of multithreading.  Master the art of utilizing multiple threads for improved performance.","title":"Multithreading in Python","embed":"https://www.youtube.com/embed/18vZnLqXMoM","duration":606},{"description":"Welcome to Day #98 of our Python tutorial! Today, we delve into multiprocessing, a technique for running multiple processes concurrently on a multi-core system. Learn how to create and manage processes, and understand the differences between multiprocessing and multithreading.  Master the art of leveraging multiple processes for significant performance gains.","title":"MultiProcessing in Python","embed":"https://www.youtube.com/embed/5Pz8WGiMJ_c","duration":999},{"description":"Day #99 of our Python journey is dedicated to the solution of Exercise 11: Drink Water Reminder. We'll provide a detailed solution, breaking down the code and explaining each step.  Learn from our implementation and gain valuable insights into building practical desktop notification systems in Python.","title":"Exercise 11: Solution + Shoutouts - Desktop Notification System"},{"description":"Congratulations! You've completed our 100-day Python tutorial! In this concluding lecture, we'll recap what we've learned and discuss the next steps in your Python journey. Explore resources, communities, and challenges to continue your coding adventure.","title":"Conclusion and Where to go from here"}],"name":"Python Programming for Beginners","overview":"This comprehensive course is designed for individuals with no prior programming experience who are eager to learn the Python programming language from scratch.  The course covers fundamental programming concepts, Python syntax, data structures, algorithms, object-oriented programming, and real-world applications.","category":"programming","level":"beginner"},"author":"CodeWithHarry","channel":"https://www.youtube.com/channel/UCeVMnSShP_Iviwkknt83cww","duration":64632}