{"quiz":{"questions":[{"correctAnswer":"A runtime environment built on Chrome's V8 JavaScript engine","options":["A programming language","A database","A runtime environment built on Chrome's V8 JavaScript engine","A framework"],"question":"What is NodeJS?"},{"correctAnswer":"Download the Node.js installer from the official website","options":["Download the Node.js installer from the official website","Use a package manager like npm","Install it through your operating system's package manager","All of the above"],"question":"How do you install NodeJS?"},{"correctAnswer":"console.log('Hello World!')","options":["print('Hello World!')","console.log('Hello World!')","echo 'Hello World!'","System.out.println('Hello World!')"],"question":"What is the command to print 'Hello World!' in NodeJS?"},{"correctAnswer":"Reusable blocks of code that provide specific functionalities.","options":["Reusable blocks of code that provide specific functionalities.","Variables that store data","Functions that perform specific tasks","A way to organize your code"],"question":"What are Modules in NodeJS?"},{"correctAnswer":"Using functions like fs.readFile() and fs.writeFile()","options":["Using functions like fs.readFile() and fs.writeFile()","Using a database to store and retrieve data","Using the HTTP module to send and receive data","Using the built-in 'os' module"],"question":"How do you perform File Handling in NodeJS?"},{"correctAnswer":"It uses an event-driven, non-blocking I/O model.","options":["It uses a multi-threaded architecture","It uses an event-driven, non-blocking I/O model.","It uses a synchronous programming model","It uses a distributed architecture"],"question":"How does NodeJS work?"},{"correctAnswer":"Using the http module and creating a server that listens for incoming requests","options":["Using the http module and creating a server that listens for incoming requests","Using the express framework","Using the socket.io library","Using the net module"],"question":"How do you build an HTTP server in NodeJS?"},{"correctAnswer":"Using the url module to parse and analyze incoming URLs.","options":["Using the url module to parse and analyze incoming URLs.","Using the path module to manipulate file paths","Using the querystring module to parse query strings","Using the express framework to handle routing"],"question":"How do you handle URLs in NodeJS?"},{"correctAnswer":"GET, POST, PUT, DELETE, PATCH","options":["GET, POST, PUT, DELETE, PATCH","GET, POST, PUT, DELETE","GET, PUT, POST, DELETE","GET, POST, DELETE"],"question":"What are the common HTTP Methods?"},{"correctAnswer":"Express is a popular framework for building web applications with NodeJS","options":["Express is a popular framework for building web applications with NodeJS","Express is a database management system","Express is a JavaScript library for DOM manipulation","Express is a command-line interface tool"],"question":"What is Express and how does it relate to NodeJS?"},{"correctAnswer":"It allows you to control the behavior of a web application based on different versions of your code.","options":["It allows you to control the behavior of a web application based on different versions of your code.","It helps you to manage your dependencies","It helps you to debug your code","It helps you to optimize your application's performance"],"question":"How does versioning work in NodeJS?"},{"correctAnswer":"A set of rules and standards for building APIs that are designed to be simple and easy to understand.","options":["A type of database","A web server","A set of rules and standards for building APIs that are designed to be simple and easy to understand.","A programming language"],"question":"What is a REST API?"},{"correctAnswer":"Using the Express framework and defining routes for different API endpoints","options":["Using the Express framework and defining routes for different API endpoints","Using the http module and creating custom routes","Using a third-party API library","Using a database to store and retrieve data"],"question":"How do you build REST APIs using Node and Express.js?"},{"correctAnswer":"Postman is a tool for testing and interacting with REST APIs.","options":["Postman is a tool for testing and interacting with REST APIs.","Postman is a database management system","Postman is a code editor","Postman is a web server"],"question":"What is Postman and how is it used for REST APIs?"},{"correctAnswer":"Functions that can be used to modify requests or responses in an Express application","options":["Functions that can be used to modify requests or responses in an Express application","Components that define the structure of an API","Modules that provide specific functionalities","Variables that store data"],"question":"What are Express Middleware?"},{"correctAnswer":"Key-value pairs that provide additional information about a request or response.","options":["Key-value pairs that provide additional information about a request or response.","Parts of a URL that identify a resource","Data formats used in APIs","Methods used to interact with an API"],"question":"What are HTTP Headers in an API?"},{"correctAnswer":"Standard codes that indicate the status of a request or response.","options":["Standard codes that indicate the status of a request or response.","Key-value pairs that provide additional information","Data formats used in APIs","Methods used to interact with an API"],"question":"What are HTTP Status Codes?"},{"correctAnswer":"A NoSQL database that stores data in a document-oriented format","options":["A NoSQL database that stores data in a document-oriented format","A relational database management system","A file system","A web server"],"question":"What is MongoDB?"},{"correctAnswer":"Using the Mongoose library to connect to MongoDB and define data models","options":["Using the Mongoose library to connect to MongoDB and define data models","Using the native MongoDB driver","Using a third-party database library","Using the built-in 'fs' module to access files"],"question":"How do you connect NodeJS with MongoDB using Mongoose and Express?"},{"correctAnswer":"It is a design pattern that separates the application into three distinct parts: Model, View, and Controller.","options":["It is a design pattern that separates the application into three distinct parts: Model, View, and Controller.","A type of database","A web server","A programming language"],"question":"What is the Model View Controller (MVC) pattern in NodeJS?"},{"correctAnswer":"Using NodeJS and MongoDB to create a database for storing and retrieving short URLs","options":["Using a cloud storage service like AWS S3","Using a relational database like MySQL","Using NodeJS and MongoDB to create a database for storing and retrieving short URLs","Using a third-party API for URL shortening"],"question":"How do you create a custom URL shortener using Node.JS and MongoDB?"},{"correctAnswer":"Using the EJS templating engine to generate HTML content on the server-side","options":["Using the EJS templating engine to generate HTML content on the server-side","Using a client-side framework like React or Angular","Using a static site generator like Jekyll or Hugo","Using a third-party API to generate content"],"question":"How do you perform Server Side Rendering with EJS and Node.JS?"},{"correctAnswer":"By implementing login and registration features using NodeJS and a database","options":["By implementing login and registration features using NodeJS and a database","By using a third-party authentication service","By using a session-based authentication system","By using a token-based authentication system"],"question":"How do you build Node.js Authentication from Scratch?"},{"correctAnswer":"JSON Web Token (JWT) is a standard for creating secure tokens that can be used for authentication and authorization","options":["JSON Web Token (JWT) is a standard for creating secure tokens that can be used for authentication and authorization","A type of database","A web server","A programming language"],"question":"What is JWT Authentication in NodeJS?"},{"correctAnswer":"Small pieces of data that are stored on the client's browser and sent with every request to the server","options":["Small pieces of data that are stored on the client's browser and sent with every request to the server","A type of database","A web server","A programming language"],"question":"What are Cookies in NodeJS?"},{"correctAnswer":"It is the process of controlling access to resources based on the user's identity","options":["It is the process of controlling access to resources based on the user's identity","It is the process of verifying a user's identity","It is the process of managing user sessions","It is the process of securing a web application"],"question":"What is Authorization in NodeJS?"},{"correctAnswer":"Using the Discord API and NodeJS to create a bot that can interact with Discord servers","options":["Using the Discord API and NodeJS to create a bot that can interact with Discord servers","Using a third-party bot creation service","Using a web-based chat platform","Using a command-line interface"],"question":"How do you create a Discord bot in NodeJS?"},{"correctAnswer":"Using the Multer library to handle file uploads in NodeJS applications","options":["Using the Multer library to handle file uploads in NodeJS applications","Using the built-in 'fs' module","Using a cloud storage service like AWS S3","Using a third-party API"],"question":"How do you upload files with NodeJS and Multer?"},{"correctAnswer":"Setting up the project structure, database connection, and basic routes for a blog application","options":["Setting up the project structure, database connection, and basic routes for a blog application","Implementing user authentication","Adding features like post creation and commenting","Deploying the application to a server"],"question":"How do you set up a NodeJS Blogging Application with MongoDB?"},{"correctAnswer":"Implementing user registration, login, and password management for the blog application","options":["Setting up the project structure, database connection, and basic routes for a blog application","Implementing user authentication","Adding features like post creation and commenting","Deploying the application to a server"],"question":"How do you set up authentication for a NodeJS Blogging Application with MongoDB?"},{"correctAnswer":"Building a fully functional blog application with features like post creation, editing, commenting, and user management.","options":["Setting up the project structure, database connection, and basic routes for a blog application","Implementing user authentication","Adding features like post creation and commenting","Deploying the application to a server"],"question":"How do you create a complete blog application using NodeJS, MongoDB and EJS?"},{"correctAnswer":"Using AWS services like EC2, S3, and Elastic Beanstalk to deploy your NodeJS application","options":["Using AWS services like EC2, S3, and Elastic Beanstalk to deploy your NodeJS application","Using a web hosting service like Netlify or Vercel","Using a local development environment","Using a containerization platform like Docker"],"question":"How do you deploy a NodeJS application on AWS?"},{"correctAnswer":"WebSocket is a communication protocol that allows for real-time two-way communication between a client and a server.","options":["WebSocket is a communication protocol that allows for real-time two-way communication between a client and a server.","WebSocket is a database management system","WebSocket is a web server","WebSocket is a programming language"],"question":"What is WebSocket in NodeJS?"},{"correctAnswer":"Streams are a way to process data in chunks, making it more efficient for handling large amounts of data","options":["Streams are a way to process data in chunks, making it more efficient for handling large amounts of data","Streams are a type of database","Streams are a way to store data in a file system","Streams are a way to communicate between different processes"],"question":"What are NodeJS Streams?"},{"correctAnswer":"Using the cluster module to create multiple worker processes that share the same server instance","options":["Using the cluster module to create multiple worker processes that share the same server instance","Using a load balancer to distribute requests across multiple servers","Using a distributed caching system","Using a content delivery network (CDN)"],"question":"How do you scale NodeJS applications using the cluster module?"},{"correctAnswer":"Nginx is a high-performance web server and reverse proxy","options":["Nginx is a high-performance web server and reverse proxy","Nginx is a database management system","Nginx is a programming language","Nginx is a cloud storage service"],"question":"What is Nginx?"},{"correctAnswer":"Downloading the Nginx installer from the official website and following the installation instructions","options":["Downloading the Nginx installer from the official website and following the installation instructions","Using a package manager like apt or yum","Using a containerization platform like Docker","All of the above"],"question":"How do you install and setup Nginx?"},{"correctAnswer":"Configuring Nginx to serve static files from a specific directory","options":["Configuring Nginx to serve static files from a specific directory","Using a web server like Apache","Using a cloud storage service like AWS S3","Using a CDN"],"question":"How do you serve static content with Nginx?"},{"correctAnswer":"Combining Nginx as a reverse proxy, SSL certificate setup using Let's Encrypt, and deployment of the NodeJS application","options":["Combining Nginx as a reverse proxy, SSL certificate setup using Let's Encrypt, and deployment of the NodeJS application","Using a cloud hosting platform like AWS Elastic Beanstalk","Using a containerization platform like Docker","Using a serverless platform like AWS Lambda"],"question":"How do you perform a full Node.js deployment using Nginx, SSL with Let's Encrypt?"},{"correctAnswer":"A framework that allows you to build and deploy serverless applications using NodeJS and other languages","options":["A framework that allows you to build and deploy serverless applications using NodeJS and other languages","A database management system","A web server","A programming language"],"question":"What is Serverless Framework with NodeJS?"},{"correctAnswer":"Serverless is a cloud computing model where the cloud provider manages the infrastructure, allowing you to focus on your code","options":["Serverless is a cloud computing model where the cloud provider manages the infrastructure, allowing you to focus on your code","Serverless is a type of database","Serverless is a web server","Serverless is a programming language"],"question":"What is Serverless?"},{"correctAnswer":"A query language for APIs that is designed to be more efficient and flexible than REST APIs","options":["A query language for APIs that is designed to be more efficient and flexible than REST APIs","A type of database","A web server","A programming language"],"question":"What is GraphQL?"},{"correctAnswer":"Building the backend architecture for a social media application using GraphQL and NodeJS","options":["Building the backend architecture for a social media application using GraphQL and NodeJS","Building a simple blog application","Building a REST API","Building a mobile application"],"question":"How do you use GraphQL to build the backend of a social media app?"},{"correctAnswer":"Setting up a GraphQL server using the Apollo Server library and configuring resolvers for different queries and mutations","options":["Setting up a GraphQL server using the Apollo Server library and configuring resolvers for different queries and mutations","Using a third-party GraphQL API service","Using a REST API to build the backend","Using a client-side framework like React or Angular"],"question":"How do you set up a GraphQL server?"},{"correctAnswer":"Using Prisma to connect your GraphQL server to a PostgreSQL database and define data models","options":["Using Prisma to connect your GraphQL server to a PostgreSQL database and define data models","Using a third-party database library","Using a REST API to access data","Using a file system to store data"],"question":"How do you connect your GraphQL server to a PostgreSQL database?"},{"correctAnswer":"Reorganizing your GraphQL code to improve its structure, maintainability, and performance","options":["Reorganizing your GraphQL code to improve its structure, maintainability, and performance","Adding new features to your GraphQL API","Deploying your GraphQL server to a production environment","Testing your GraphQL API"],"question":"How do you refactor your GraphQL code?"},{"correctAnswer":"Implementing authentication and authorization features for your GraphQL server","options":["Implementing authentication and authorization features for your GraphQL server","Adding new features to your GraphQL API","Deploying your GraphQL server to a production environment","Testing your GraphQL API"],"question":"How do you implement authentication for your GraphQL server?"},{"correctAnswer":"Using JWT for authentication and creating a custom context to pass user information to resolvers","options":["Using JWT for authentication and creating a custom context to pass user information to resolvers","Using a third-party authentication service","Using a session-based authentication system","Using a database-based authentication system"],"question":"How do you implement JWT Authentication and Context in GraphQL?"}]}}