{"course":{"lectures":[{"description":"Node.js, a popular JavaScript runtime environment, is a powerful tool for building server-side applications.  In this lecture, we'll explore the fundamental concepts of Node.js, understanding its asynchronous nature, event loop, and module system. We'll also discuss the advantages of using Node.js for building scalable and high-performance web applications.","title":"What is NodeJS?","embed":"https://www.youtube.com/embed/ohIAiuHMKMI","duration":465},{"description":"Setting up Node.js on your system is essential before you can start developing applications. This lecture guides you through the installation process of Node.js on different operating systems, including Windows, macOS, and Linux. We'll cover the installation steps, verify the installation, and introduce the Node.js package manager (npm).","title":"Node JS Installation","embed":"https://www.youtube.com/embed/N6PjgN9licA","duration":362},{"description":"Dive into the world of Node.js by creating your first program, the classic \"Hello World\" application. This lecture will walk you through the basic syntax, execution, and output of a simple Node.js script. You'll learn how to run your code using the Node.js runtime and understand the fundamental building blocks of Node.js programming.","title":"Hello World NodeJS","embed":"https://www.youtube.com/embed/XhCs5cTYW_8","duration":585},{"description":"Node.js leverages the concept of modules to organize and reuse code, improving code maintainability and modularity. This lecture explores the core concepts of modules in Node.js, including built-in modules, third-party modules, and how to create and manage your own modules. We'll delve into the process of importing and exporting modules, along with best practices for modular development.","title":"Modules in NodeJS","embed":"https://www.youtube.com/embed/FSRo41TaHFU","duration":925},{"description":"File handling is a crucial aspect of many applications, enabling interaction with files and data storage. This lecture provides a comprehensive guide to working with files in Node.js. You'll learn how to read, write, create, delete, and manipulate files using the built-in file system module. We'll cover various file operations, error handling, and best practices for file management in Node.js.","title":"File Handling in NodeJS","embed":"https://www.youtube.com/embed/YazJFb_i4A0","duration":1097},{"description":"Understanding the internal workings of Node.js is essential for optimizing your applications and troubleshooting potential issues. This lecture delves into the core mechanisms of Node.js, exploring the event loop, asynchronous nature, and how Node.js handles concurrent operations efficiently. We'll examine the concept of non-blocking I/O and its impact on application performance.","title":"How NodeJS Works?","embed":"https://www.youtube.com/embed/y0aTs56DJWk","duration":863},{"description":"Node.js excels in creating web servers, enabling you to build backend services and handle client requests. This lecture introduces you to the process of building a basic HTTP server in Node.js using the built-in HTTP module. You'll learn how to create routes, handle requests, send responses, and set up server configuration.","title":"Building HTTP Server in NodeJS","embed":"https://www.youtube.com/embed/ZQsrcayZcSk","duration":1076},{"description":"Handling URLs is a fundamental aspect of web development. This lecture explores how to work with URLs in Node.js, extracting information from URLs, parsing query parameters, and using URL manipulation techniques for routing and data retrieval. We'll cover various methods for URL handling in Node.js applications.","title":"Handling URL's in NodeJS","embed":"https://www.youtube.com/embed/Nt-AsZh5woE","duration":1237},{"description":"HTTP methods, such as GET, POST, PUT, DELETE, and PATCH, define the actions that can be performed on a web resource. This lecture provides a comprehensive overview of common HTTP methods and their usage in Node.js web development. You'll learn how to handle different HTTP methods in your Node.js applications, ensuring proper request processing and data manipulation.","title":"HTTP METHODS","embed":"https://www.youtube.com/embed/kREAjKyPbSI","duration":818},{"description":"Express.js is a powerful framework that simplifies web application development in Node.js. This lecture introduces the basics of Express.js, guiding you through the process of setting up an Express.js application and creating routes for your web service. You'll learn how Express.js handles requests, responses, and middleware, making web development more efficient and organized.","title":"Getting Started with Express and NodeJS","embed":"https://www.youtube.com/embed/N2-FyBBxOZA","duration":688},{"description":"Versioning is an essential aspect of software development, allowing you to manage different versions of your code and track changes. This lecture explores how versioning works in Node.js, introducing tools like npm and semantic versioning (SemVer). You'll learn how to manage package dependencies, update versions, and handle version conflicts in your Node.js projects.","title":"How Versioning Works in NodeJS?","embed":"https://www.youtube.com/embed/ORmB_ABimjM","duration":1270},{"description":"RESTful APIs are a common architectural style for web services, enabling communication and data exchange between different applications. This lecture provides an introduction to REST APIs, exploring their principles, components, and benefits. You'll understand the core concepts of REST, including resources, representations, and HTTP methods used in RESTful API design.","title":"What is REST API?","embed":"https://www.youtube.com/embed/cJAyEOZQUQY","duration":941},{"description":"Building RESTful APIs using Node.js and Express.js is a powerful combination for creating scalable web services. This lecture guides you through the process of creating a RESTful API using Express.js, defining routes, handling request methods, and managing data responses. You'll learn how to implement best practices for REST API design and development using Node.js.","title":"Building REST API's using Node and Express.js","embed":"https://www.youtube.com/embed/uNCrMvkPUAE","duration":1227},{"description":"Postman is a popular tool for testing and interacting with APIs. This lecture introduces Postman, providing a hands-on guide to using Postman for sending API requests, examining responses, and managing API documentation. You'll learn how to leverage Postman's features for efficient API testing and development.","title":"Introduction to POSTMAN for REST API's","embed":"https://www.youtube.com/embed/7OzNVIxPLH0","duration":889},{"description":"Middleware is a core concept in Express.js, allowing you to intercept and modify requests and responses before they reach the final handler. This lecture explores Express middleware in detail, demonstrating how to implement middleware for authentication, logging, error handling, and other common tasks in web development. You'll learn how to write your own middleware and leverage existing middleware packages.","title":"Express Middleware","embed":"https://www.youtube.com/embed/n2c0mf1sza4","duration":1190},{"description":"HTTP headers are essential parts of HTTP requests and responses, carrying metadata about the request or response. This lecture explores the role of HTTP headers in APIs, understanding common headers like Content-Type, Authorization, and User-Agent. You'll learn how to read and manipulate HTTP headers in your Node.js applications, ensuring proper data transmission and request handling.","title":"What are HTTP Headers in API","embed":"https://www.youtube.com/embed/mhg3Vwsb88M","duration":1058},{"description":"HTTP status codes are essential for communicating the outcome of an API request to the client. This lecture provides an overview of common HTTP status codes, explaining their meanings and usage in web development. You'll learn how to choose the appropriate status code for different scenarios, ensuring clear communication between the client and server.","title":"HTTP Status Codes","embed":"https://www.youtube.com/embed/fLGw2GK884s","duration":936},{"description":"MongoDB is a popular NoSQL database that offers flexibility and scalability for data storage. This lecture introduces MongoDB, explaining its concepts, data models, and benefits. You'll understand how to work with MongoDB documents, collections, and databases, preparing for integration with Node.js applications.","title":"Getting Started with MongoDB","embed":"https://www.youtube.com/embed/oH0VoYiA8_s","duration":481},{"description":"Connecting Node.js applications with MongoDB using Mongoose, an Object Data Mapper (ODM) library, is a common practice for building data-driven applications. This lecture demonstrates how to connect Node.js to MongoDB using Mongoose, create models, interact with data, and manage database operations. You'll learn how to leverage Mongoose for efficient data access and manipulation in your Node.js projects.","title":"Connecting NodeJS with MongoDB | Mongoose + Express","embed":"https://www.youtube.com/embed/xrglM8U0Zv8","duration":1158},{"description":"The Model-View-Controller (MVC) pattern is a widely used architectural pattern in web development, separating concerns and promoting code organization. This lecture explores the MVC pattern in the context of Node.js, explaining the roles of models, views, and controllers. You'll understand how MVC improves code maintainability, testability, and scalability in Node.js applications.","title":"Model View Controller in NodeJS | MVC Pattern","embed":"https://www.youtube.com/embed/JLtXoru-ipo","duration":1381},{"description":"Building a custom URL shortener is a practical application that demonstrates Node.js, MongoDB, and web development principles. This lecture walks you through the process of creating a URL shortener, from database design to API endpoints, using Node.js and MongoDB. You'll learn how to handle URL redirection, create unique short URLs, and manage user-generated content.","title":"Create a Custom URL Shortener using Node.JS and MongoDB","embed":"https://www.youtube.com/embed/4WvX9dBjiJo","duration":1390},{"description":"Server-side rendering (SSR) is a technique that renders HTML on the server, improving SEO and initial page load times. This lecture explores server-side rendering using EJS (Embedded JavaScript Templates) in Node.js. You'll learn how to create dynamic HTML content on the server, enhance page performance, and improve SEO by utilizing SSR techniques.","title":"Server Side Rendering with EJS and Node.JS","embed":"https://www.youtube.com/embed/yy9cbu_e3Xg","duration":1524},{"description":"Building robust authentication systems is crucial for secure web applications. This lecture guides you through the process of creating a basic authentication system from scratch in Node.js, covering user registration, login, password hashing, and session management. You'll learn how to implement secure authentication measures in your Node.js applications.","title":"Building Node.js Authentication from Scratch","embed":"https://www.youtube.com/embed/OWeruyqhiTo","duration":2349},{"description":"JSON Web Tokens (JWTs) are a popular standard for secure and stateless authentication in web applications. This lecture explores JWT authentication in Node.js, explaining how to generate, verify, and manage JWTs for user authentication. You'll learn how to implement JWT authentication in your Node.js APIs, securing access to protected resources.","title":"JWT Authentication in NodeJS","embed":"https://www.youtube.com/embed/mGrVmEex6_g","duration":870},{"description":"Cookies are small pieces of data stored on the client's browser, often used for session management and user tracking. This lecture introduces the concept of cookies in Node.js, explaining how to set, get, and manage cookies in your applications. You'll learn how to leverage cookies for user authentication, personalization, and other web development tasks.","title":"What are Cookies in NodeJS?","embed":"https://www.youtube.com/embed/kMErso06vHo","duration":1835},{"description":"Authorization is a crucial part of security, determining which actions a user is allowed to perform. This lecture explores authorization in Node.js, explaining how to implement authorization mechanisms using roles, permissions, and access control lists. You'll learn how to enforce authorization rules in your Node.js applications, ensuring that users only have access to the resources they are entitled to.","title":"Authorization in NodeJS","embed":"https://www.youtube.com/embed/1uxWtBFOrkk","duration":1173},{"description":"Discord bots are popular tools for automating tasks, managing communities, and enhancing the user experience on Discord. This lecture provides a guide to creating a Discord bot using Node.js, covering bot setup, event handling, command processing, and integration with the Discord API. You'll learn how to build functional and interactive Discord bots using Node.js.","title":"Creating Discord Bot in NodeJS","embed":"https://www.youtube.com/embed/5UOMuTWrh6Q","duration":1305},{"description":"File uploads are a common feature in web applications, allowing users to submit files for storage and processing. This lecture introduces the Multer library in Node.js, demonstrating how to handle file uploads securely and efficiently. You'll learn how to configure Multer, manage file storage, and process uploaded files in your Node.js applications.","title":"Uploading Files with NodeJS and Multer","embed":"https://www.youtube.com/embed/WqJ0P8JnftI","duration":851},{"description":"Building a blogging application is a great project for learning Node.js, MongoDB, and web development practices. This lecture provides a step-by-step guide to setting up a Node.js blogging application with MongoDB. You'll learn how to create a basic project structure, define database models, and implement core functionalities like post creation, editing, and display.","title":"Setting Up Project - NodeJS Blogging Application with MongoDB","embed":"https://www.youtube.com/embed/6z6CR29gtds","duration":2376},{"description":"Secure authentication is essential for any blogging application. This lecture builds upon the previous setup, implementing authentication using MongoDB and Node.js. You'll learn how to handle user registration, login, and session management, securing your blogging platform from unauthorized access.","title":"Setting up Authentication  - NodeJS Blogging Application with MongoDB","embed":"https://www.youtube.com/embed/X1AGH8Byj9Y","duration":2301},{"description":"Complete your blogging application by adding features like post commenting, user profiles, and search functionality. This lecture provides a comprehensive guide to building a fully functional Node.js blogging application, integrating MongoDB for data storage and EJS for templating.","title":"Complete Blog App - NodeJS, MongoDB and EJS","embed":"https://www.youtube.com/embed/vnWVrjsEeAM","duration":1589},{"description":"Deploying your Node.js application to AWS (Amazon Web Services) allows you to scale your application and manage infrastructure efficiently. This lecture provides a guide to deploying your Node.js application on AWS, covering the steps involved in creating an EC2 instance, configuring the environment, and deploying your application.","title":"Deploy NodeJS Application on AWS - Amazon Web Services | NodeJS","embed":"https://www.youtube.com/embed/_U0pTlpyMGg","duration":1191},{"description":"WebSockets provide real-time communication between a client and server, enabling features like chat, live updates, and notifications. This lecture introduces WebSockets in Node.js, using Socket.IO for implementing real-time messaging functionality. You'll learn how to establish WebSocket connections, send and receive messages, and create interactive real-time applications.","title":"WebSocket in NodeJS | Socket.IO - Real Time Messaging","embed":"https://www.youtube.com/embed/UUddpbgPEJM","duration":1947},{"description":"Node.js streams provide a powerful mechanism for handling large amounts of data efficiently. This lecture explores the concept of streams in Node.js, demonstrating how to read and write data from files, network connections, and other sources using streams. You'll learn how to optimize your applications for data handling and processing using Node.js streams.","title":"NodeJS Streams","embed":"https://www.youtube.com/embed/64LJJhT6Ybo","duration":926},{"description":"Scaling Node.js applications to handle high traffic and workload is essential for performance and reliability. This lecture explores how to scale Node.js applications using the cluster module. You'll learn how to create child processes, distribute workload, and improve the performance of your Node.js applications.","title":"How to scale NodeJs applications using the cluster module.","embed":"https://www.youtube.com/embed/JoPZ9gEvpz8","duration":758},{"description":"Nginx is a popular and powerful web server that offers high performance, load balancing, and reverse proxy capabilities. This lecture introduces Nginx, explaining its features and benefits for web development. You'll understand the role of Nginx in modern web infrastructure, preparing for its integration with Node.js applications.","title":"What is Nginx?","embed":"https://www.youtube.com/embed/b_B1BEShfBc","duration":705},{"description":"Installing and setting up Nginx is the first step towards using this powerful web server. This lecture provides a guide to installing Nginx on different operating systems, configuring basic settings, and verifying the installation. You'll learn how to set up Nginx for your development environment or production server.","title":"Install and Setup Nginx","embed":"https://www.youtube.com/embed/Qmld1te08Ns","duration":796},{"description":"Serving static content, such as HTML, CSS, and JavaScript files, is a common task in web development. This lecture demonstrates how to configure Nginx to serve static content from your web application. You'll learn how to create virtual hosts, define document roots, and set up content caching for efficient file delivery.","title":"Serve Static Content with Nginx","embed":"https://www.youtube.com/embed/YkuhqIDUi2A","duration":901},{"description":"This lecture provides a complete guide to deploying a Node.js application using Nginx for reverse proxying, securing your application with SSL certificates using Let's Encrypt, and optimizing for performance. You'll learn how to integrate Nginx with your Node.js application for a robust and secure deployment.","title":"Full Node.js Deployment - NGINX, SSL With Lets Encrypt","embed":"https://www.youtube.com/embed/ofBFl4M4BFk","duration":1885},{"description":"Serverless computing offers a paradigm shift in application development, allowing you to focus on code without managing infrastructure. This lecture introduces serverless frameworks, specifically focusing on the Serverless Framework and its integration with Node.js. You'll learn how to create and deploy serverless functions using Node.js, reducing operational overhead.","title":"Serverless Framework with NodeJS","embed":"https://www.youtube.com/embed/VvYADzRwJK8","duration":1246},{"description":"This lecture dives deep into the concept of serverless computing, contrasting it with traditional monolithic architectures. It explores the advantages and disadvantages of serverless, and delves into the popular AWS Lambda service, a serverless execution environment. You'll gain a solid understanding of serverless principles and its impact on modern application development.","title":"What is Serverless? | Serverless Vs Monolith | AWS Lambda","embed":"https://www.youtube.com/embed/AgOmeANl3ls","duration":2171},{"description":"GraphQL is a query language and runtime for APIs, offering a flexible and powerful alternative to traditional REST APIs. This lecture provides a crash course in GraphQL, introducing the fundamental concepts, syntax, and benefits of GraphQL. You'll learn how to query and mutate data using GraphQL, understanding its strengths in data fetching and API design.","title":"GraphQL Crash Course - GraphQL NodeJS","embed":"https://www.youtube.com/embed/WtkKwO1viI8","duration":2551},{"description":"Building a Threads app clone using GraphQL provides a practical example of using GraphQL for backend architecture. This lecture explores the design and implementation of a backend architecture for a Threads clone using GraphQL, demonstrating how to model data, define queries and mutations, and handle user interactions.","title":"Threads App GraphQL Clone | Backend Architecture","embed":"https://www.youtube.com/embed/FbDrEEhG5cM","duration":1134},{"description":"Setting up a GraphQL server is essential for using GraphQL in your Node.js applications. This lecture guides you through the process of setting up a GraphQL server using Apollo Server, a popular library for GraphQL development. You'll learn how to define schema, resolvers, and configure your GraphQL server for data access.","title":"Setting up Graphql Server | Complete GraphQL Series","embed":"https://www.youtube.com/embed/g6YpoVYTd1s","duration":1501},{"description":"Integrating GraphQL with Prisma and PostgreSQL provides a robust and efficient database solution. This lecture demonstrates how to set up a GraphQL server using Prisma, a database client for Node.js, and PostgreSQL, a powerful relational database. You'll learn how to define data models, generate Prisma client, and connect GraphQL to your database.","title":"Graphql Prisma Postgresql Setup | Complete GraphQL Series","embed":"https://www.youtube.com/embed/4jiTZGn34_c","duration":1047},{"description":"Refactoring GraphQL code is crucial for maintaining code quality and scalability. This lecture explores best practices for refactoring GraphQL code, covering techniques for restructuring queries, mutations, and resolvers to improve maintainability and performance. You'll learn how to optimize your GraphQL codebase for readability and efficiency.","title":"Refactoring GraphQL Code | Complete GraphQL Series","embed":"https://www.youtube.com/embed/MSJImC6cTkY","duration":755},{"description":"Authentication is an essential aspect of any GraphQL server, securing access to data and functionalities. This lecture explores authentication with GraphQL servers, covering methods like JWT authentication, using context for user information, and implementing authorization rules. You'll learn how to secure your GraphQL APIs from unauthorized access and ensure data integrity.","title":"Authentication with GraphQL Server | Complete GraphQL Series","embed":"https://www.youtube.com/embed/0XFoeaYnc20","duration":1300},{"description":"This lecture delves deeper into JWT authentication with GraphQL servers, demonstrating how to generate, verify, and manage JWTs for secure authentication. You'll also learn how to use context in GraphQL to access user information and enforce authorization rules based on user roles and permissions.","title":"JWT Authentication and Context in GraphQL","embed":"https://www.youtube.com/embed/8atiBUsAOcI","duration":817}],"name":"Mastering Node.js","overview":"Dive deep into the world of Node.js, a powerful JavaScript runtime environment for building server-side applications. From the fundamentals of Node.js to building REST APIs, working with databases, and deploying your applications, this comprehensive course covers everything you need to know to master Node.js development.","category":"programming","level":"beginner"},"author":"Piyush Garg","channel":"https://www.youtube.com/channel/UCf9T51_FmMlfhiGpoes0yFA","duration":57841}