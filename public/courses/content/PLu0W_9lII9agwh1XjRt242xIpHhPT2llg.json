{"course":{"lectures":[{"description":"This lecture provides a comprehensive introduction to programming concepts and introduces the Python programming language. We'll cover the fundamentals of Python syntax, data types, variables, and basic operations. By the end of this lecture, you'll be able to write simple Python programs and have a strong foundation to build upon.","title":"Introduction to Programming & Python | Python Tutorial - Day #1","embed":"https://www.youtube.com/embed/7wnove7K-ZQ","duration":710},{"description":"Delve deeper into the world of Python programming with this comprehensive tutorial. We'll explore essential concepts like variables, data types, operators, and control flow. You'll learn how to create programs that can perform calculations, make decisions, and handle user input. This lecture is packed with practical examples and exercises to solidify your understanding.","title":"Some Amazing Python Programs - The Power of Python | Python Tutorial - Day #2","embed":"https://www.youtube.com/embed/Tto8TS-fJQU","duration":518},{"description":"Discover the power of modules and the package manager, Pip. Learn how to import and use pre-built modules to extend your Python programs. We'll cover popular modules for data manipulation, web scraping, and more. This lecture empowers you to leverage existing code and streamline your development process.","title":"Modules and Pip | Python Tutorial - Day #3","embed":"https://www.youtube.com/embed/xwKO_y2gHxQ","duration":761},{"description":"Dive into the exciting world of Python programming by writing your very first program. Learn how to create a simple program that interacts with the user and displays messages. This lecture provides a hands-on introduction to the core concepts of Python and empowers you to create your own applications.","title":"Our First Python Program | Python Tutorial - Day #4","embed":"https://www.youtube.com/embed/7IWOYhfAcVg","duration":444},{"description":"Master the art of writing clear and well-documented code. Explore the role of comments in Python, understand how to use escape sequences to control output, and delve into the versatile print statement. This lecture emphasizes best practices for writing readable and maintainable code.","title":"Comments, Escape Sequences & Print Statement | Python Tutorial - Day #5","embed":"https://www.youtube.com/embed/qxPMmW93eDs","duration":1122},{"description":"Explore the foundational concept of variables and data types in Python. Learn how to store information in variables and manipulate it using various data types. You'll gain a deep understanding of the different types of data that Python can handle, including integers, floats, strings, and booleans.","title":"Variables and Data Types | Python Tutorial - Day #6","embed":"https://www.youtube.com/embed/ORCuz7s5cCY","duration":1005},{"description":"Put your Python skills to the test by building a calculator! This hands-on exercise will challenge you to apply your knowledge of operators, data types, and user input to create a functional calculator. You'll learn how to take user input, perform calculations, and display the results. Get ready to unleash your creativity and problem-solving abilities!","title":"Exercise 1: Calculator using Python | Python Tutorial - Day #7","embed":"https://www.youtube.com/embed/FLVqcxnJP_E","duration":410},{"description":"This lecture provides a detailed walkthrough of the solution to Exercise 1: Calculator using Python. We'll explore the code step-by-step, analyzing the logic behind each decision and highlighting important concepts. You'll gain valuable insights into problem-solving strategies and best practices in Python programming.","title":"Exercise 1: Calculator using Python (Solution) | Python Tutorial - Day #8","embed":"https://www.youtube.com/embed/dohaSBCKCr0","duration":622},{"description":"Master the art of type conversion in Python, known as typecasting. Learn how to change the data type of a variable from one to another. This crucial skill allows you to perform operations between different data types and manipulate data effectively.","title":"Typecasting in Python | Python Tutorial - Day #9","embed":"https://www.youtube.com/embed/Pu5bqySSSS0","duration":565},{"description":"Interact with your Python programs by learning how to take user input. We'll explore various methods for receiving input from the user and storing it in variables. This lecture empowers you to create interactive programs that respond to user actions.","title":"Taking User Input in Python | Python Tutorial - Day #10","embed":"https://www.youtube.com/embed/WvG-R-xXouA","duration":616},{"description":"Dive into the world of strings in Python. Explore their properties, methods, and how to manipulate text data. You'll learn how to create, access, and modify strings, as well as use them for various applications.","title":"Strings in Python | Python Tutorial - Day #11","embed":"https://www.youtube.com/embed/kMNFQYArrLg","duration":695},{"description":"Unlock the power of string slicing and operations. Learn how to extract specific portions of strings, perform operations like concatenation and repetition, and explore various string methods. This lecture deepens your understanding of string manipulation in Python.","title":"Strings Slicing and Operations on Strings in Python | Python Tutorial - Day #12","embed":"https://www.youtube.com/embed/8jW7lpT8HW8","duration":708},{"description":"Expand your string manipulation skills with a comprehensive exploration of Python's built-in string methods. Discover powerful methods for searching, replacing, formatting, and manipulating text data. This lecture equips you with essential tools for working effectively with strings.","title":"String Methods in Python | Python Tutorial - Day #13","embed":"https://www.youtube.com/embed/0INvoK_T0cE","duration":1352},{"description":"Learn how to control the flow of your Python programs using conditional statements. Explore the 'if-else' structure to execute different blocks of code based on certain conditions. You'll gain the ability to create programs that make decisions and respond to various situations.","title":"If Else Conditional Statements in Python | Python Tutorial - Day #14","embed":"https://www.youtube.com/embed/ceiuLR2ysas","duration":1167},{"description":"Put your Python skills to the test in this engaging exercise. You'll be challenged to create a program that simulates a polite greeting based on the time of day. This exercise provides hands-on practice with conditional statements and user input, allowing you to create an interactive program.","title":"Exercise 2: Good Morning Sir | Python Tutorial - Day #15","embed":"https://www.youtube.com/embed/d7ng_aV4qdI","duration":319},{"description":"Explore the powerful 'match-case' statement, a versatile alternative to 'if-else' for handling multiple conditions. This lecture will showcase the advantages of the 'match-case' structure and its ability to streamline code and improve readability. You'll learn how to efficiently match patterns and execute specific code blocks based on the input.","title":"Match Case Statements in Python | Python Tutorial - Day #16","embed":"https://www.youtube.com/embed/bthQCK1QAmQ","duration":491},{"description":"Dive into the world of loops in Python with 'for' loops. Learn how to iterate through sequences, such as lists and strings, and execute code multiple times. This lecture provides a clear understanding of how to use 'for' loops to automate repetitive tasks and process data efficiently.","title":"For Loops in Python | Python Tutorial - Day #17","embed":"https://www.youtube.com/embed/fIYVzKp0q5w","duration":781},{"description":"Expand your looping skills with 'while' loops. Learn how to execute code repeatedly as long as a specific condition is true. Explore the power of 'while' loops for handling tasks that require an indefinite number of iterations.","title":"While Loops in Python | Python Tutorial - Day #18","embed":"https://www.youtube.com/embed/-tCFyIyKVx0","duration":850},{"description":"Master the art of controlling the flow of your loops with the 'break' and 'continue' statements. Learn how to exit a loop prematurely or skip specific iterations. This lecture enhances your understanding of loop control and provides practical examples to illustrate their use.","title":"break and continue in Python | Python Tutorial - Day #19","embed":"https://www.youtube.com/embed/RkwJnjdrm70","duration":734},{"description":"Dive into the world of functions in Python. Discover how to define reusable blocks of code that perform specific tasks. Learn how to create functions, pass arguments, and return values. This lecture empowers you to write modular and organized code, enhancing maintainability and reusability.","title":"Functions in Python | Python Tutorial - Day #20","embed":"https://www.youtube.com/embed/dyvxxJSGUsE","duration":978},{"description":"Explore the various ways to pass arguments to functions in Python. Learn about positional arguments, keyword arguments, and default values. This lecture provides a comprehensive understanding of how to effectively pass information to functions and control their behavior.","title":"Function Arguments in Python | Python Tutorial - Day #21","embed":"https://www.youtube.com/embed/0d6b6fFuCkE","duration":830},{"description":"Dive into the versatile world of lists in Python. Learn how to create, access, and modify lists, which are ordered collections of elements. This lecture provides a solid foundation for working with lists, a fundamental data structure in Python.","title":"Introduction to Lists in Python | Python Tutorial - Day #22","embed":"https://www.youtube.com/embed/eF6nK5bSlmg","duration":1207},{"description":"Unlock the power of list methods. Explore a variety of methods for manipulating lists, including appending, inserting, removing, sorting, and more. This lecture equips you with the tools to efficiently work with lists and perform various operations on them.","title":"List Methods in Python | Python Tutorial - Day #23","embed":"https://www.youtube.com/embed/scWc3F8LbOo","duration":572},{"description":"Explore the concept of tuples in Python. Learn how to create, access, and manipulate tuples, which are immutable sequences of elements. Discover the key differences between tuples and lists and their respective applications.","title":"Tuples in Python | Python Tutorial - Day #24","embed":"https://www.youtube.com/embed/PipsOUDKrVk","duration":495},{"description":"Delve into the operations you can perform on tuples in Python. Explore how to access elements, concatenate tuples, and understand their immutability. This lecture provides a comprehensive understanding of working with tuples in Python.","title":"Operations on Tuples in Python | Python Tutorial - Day #25","embed":"https://www.youtube.com/embed/XblLSduioJI","duration":419},{"description":"This lecture provides a complete solution to Exercise 2: Good Morning Sir. We'll examine the code, analyze the logic, and discuss best practices. Additionally, we'll celebrate the achievements of all the participants who have been diligently following this Python tutorial.","title":"Exercise 2: Solution & Shoutouts | Python Tutorial - Day #26","embed":"https://www.youtube.com/embed/IZBKXWrbqBM","duration":462},{"description":"Challenge yourself with Exercise 3: Kaun Banega Crorepati (KBC). You'll create a Python program that simulates the popular game show KBC, allowing users to answer questions and progress through different levels. This exercise incorporates concepts like user input, conditional statements, and loops, providing a practical and fun application of your Python skills.","title":"Exercise 3: Kaun Banega Crorepati (KBC) | Python Tutorial - Day #27","embed":"https://www.youtube.com/embed/Vs1Z7K70Mvw","duration":167},{"description":"Explore the efficient and powerful 'f-strings' in Python. Learn how to format strings using embedded expressions, resulting in more readable and concise code. This lecture showcases the advantages of 'f-strings' for creating dynamic strings and enhancing code clarity.","title":"f-strings in Python | Python Tutorial - Day #28","embed":"https://www.youtube.com/embed/ixmxgUf8yIg","duration":532},{"description":"Dive into the world of documentation in Python with docstrings. Learn how to write clear and concise documentation for your functions and classes. Docstrings help you explain the purpose and usage of your code, making it more understandable for yourself and others.","title":"Docstrings in Python | Python Tutorial - Day #29","embed":"https://www.youtube.com/embed/SJzsNd7SM0g","duration":512},{"description":"Unlock the power of recursion in Python. Learn how to define functions that call themselves, allowing you to solve problems by breaking them down into smaller, self-similar subproblems. This lecture explores the concept of recursion and its applications in Python programming.","title":"Recursion in Python | Python Tutorial - Day #30","embed":"https://www.youtube.com/embed/XYwJKFB8DUk","duration":601},{"description":"Dive into the world of sets in Python. Explore their unique properties, including unorderedness and uniqueness. Learn how to create, access, and manipulate sets, which are ideal for storing collections of distinct elements.","title":"Sets in Python | Python Tutorial - Day #31","embed":"https://www.youtube.com/embed/l3kCO8cVA6o","duration":472},{"description":"Master the art of manipulating sets with a comprehensive exploration of Python's built-in set methods. Discover powerful methods for adding, removing, and interacting with elements within sets. This lecture equips you with essential tools for working effectively with sets.","title":"Set Methods in Python | Python Tutorial - Day #32","embed":"https://www.youtube.com/embed/HOrutCnp2zo","duration":958},{"description":"Dive into the world of dictionaries in Python. Discover how to create, access, and manipulate dictionaries, which are key-value pairs that allow for efficient data storage and retrieval. This lecture provides a solid foundation for working with dictionaries, a versatile data structure in Python.","title":"Dictionaries in Python | Python Tutorial - Day #33","embed":"https://www.youtube.com/embed/j2G68uQtOwM","duration":620},{"description":"Explore a variety of methods for working with dictionaries in Python. Learn how to add, remove, update, and retrieve key-value pairs. This lecture equips you with the tools to efficiently manipulate dictionaries and access their data.","title":"Dictionary Methods in Python | Python Tutorial - Day #34","embed":"https://www.youtube.com/embed/LmbFwaLjT9k","duration":507},{"description":"Enhance your understanding of loops with the 'for loop with else' structure. This lecture explains how to use the 'else' clause to execute code after a 'for' loop completes without encountering a 'break' statement. This structure provides additional flexibility for handling loop execution scenarios.","title":"for Loop with else in Python | Python Tutorial - Day #35","embed":"https://www.youtube.com/embed/qUkcIgErZzc","duration":393},{"description":"Dive into the world of exception handling in Python. Learn how to handle runtime errors gracefully by catching and handling exceptions. This lecture covers essential concepts like try, except, and finally blocks, empowering you to write robust and reliable code.","title":"Exception Handling in Python | Python Tutorial - Day #36","embed":"https://www.youtube.com/embed/4LKo6dlku7M","duration":653},{"description":"Master the 'finally' keyword in Python exception handling. This lecture explains how the 'finally' block ensures that a specific code block executes regardless of whether an exception is raised or caught. This structure guarantees the execution of essential cleanup tasks, even in the face of errors.","title":"Finally keyword in Python | Python Tutorial - Day #37","embed":"https://www.youtube.com/embed/r_iuC-IDpPM","duration":485},{"description":"Explore the power of raising custom exceptions in Python. Learn how to create and raise your own exceptions, allowing you to handle specific error conditions tailored to your application's needs. This lecture demonstrates how to enhance your code's error handling capabilities and provide more informative error messages.","title":"Raising custom errors in Python | Python Tutorial - Day #38","embed":"https://www.youtube.com/embed/Phr4CNppYoM","duration":642},{"description":"This lecture provides a complete solution to Exercise 3: Kaun Banega Crorepati (KBC). We'll examine the code, analyze the logic, and discuss best practices. Additionally, we'll celebrate the achievements of all the participants who have been diligently following this Python tutorial.","title":"Kaun Banega Crorepati: Exercise 3 - Solution & Shoutouts | Python Tutorial - Day #39","embed":"https://www.youtube.com/embed/nyfeYAxP-EM","duration":1396},{"description":"Put your Python skills to the test with Exercise 4: Secret Code Language. You'll create a program that takes a message as input, encrypts it using a simple code, and then decrypts the encrypted message. This exercise challenges you to apply your knowledge of string manipulation and data processing to create a fun and practical application.","title":"Exercise 4: Secret Code Language | Python Tutorial - Day #40","embed":"https://www.youtube.com/embed/pOWJ6WgVRIU","duration":365},{"description":"Explore the convenient shorthand for 'if-else' statements in Python. This lecture demonstrates how to combine conditional logic and assignment in a single line, resulting in more compact and readable code. This shorthand provides a concise way to express simple conditional expressions.","title":"Short hand if else statements | Python Tutorial - Day #41","embed":"https://www.youtube.com/embed/Qqx_zNmQVGI","duration":463},{"description":"Discover the versatile 'enumerate' function in Python. Learn how to iterate through a sequence while simultaneously obtaining both the index and value of each element. This function enhances your ability to process data effectively and handle situations that require both index and value information.","title":"Enumerate Function in Python | Python Tutorial - Day #42","embed":"https://www.youtube.com/embed/kGnYc_h1geM","duration":457},{"description":"Dive into the world of virtual environments in Python. Learn how to create isolated environments for your projects, ensuring that dependencies are managed separately and conflicts are avoided. This lecture covers the essential concepts and commands for working with virtual environments, a crucial practice for professional Python development.","title":"Virtual Environment in Python | Python Tutorial - Day #43","embed":"https://www.youtube.com/embed/nt6LlFTWOkg","duration":1298},{"description":"Gain a deeper understanding of how the 'import' mechanism works in Python. This lecture explores the process of importing modules, resolving dependencies, and managing the search path. You'll learn how to effectively utilize modules to extend your programs and streamline your development.","title":"How import works in Python | Python Tutorial - Day #44","embed":"https://www.youtube.com/embed/Pr7UOr35NcI","duration":762},{"description":"Uncover the significance of the 'if __name__ == \"__main__\"' block in Python. This lecture explains how this structure allows you to execute code only when the script is run directly, rather than when it's imported as a module. You'll learn how to use this construct for running specific code within your scripts.","title":"if __name__ == \"__main__\" in Python | Python Tutorial - Day #45","embed":"https://www.youtube.com/embed/y_CX2Rvitk8","duration":564},{"description":"Explore the powerful 'os' module in Python, which provides functions for interacting with the operating system. Learn how to perform tasks like accessing file systems, managing directories, and executing commands. This lecture empowers you to leverage system-level operations within your Python programs.","title":"os Module in Python | Python Tutorial - Day #46","embed":"https://www.youtube.com/embed/dkVYSsL90Oo","duration":924},{"description":"This lecture provides a comprehensive solution to Exercise 4: Secret Code Language. We'll examine the code, analyze the logic, and discuss best practices. Additionally, we'll celebrate the achievements of all the participants who have been diligently following this Python tutorial.","title":"Exercise 4: Solutions and Shoutouts | Python Tutorial - Day #47","embed":"https://www.youtube.com/embed/4lSQfOJKn7U","duration":1171},{"description":"Dive into the crucial distinction between local and global variables in Python. Learn how variables defined within functions have a local scope, while variables defined outside have a global scope. This lecture clarifies the rules of variable scope and how it affects the accessibility of variables within your programs.","title":"Local vs Global Variables in Python| Python Tutorial - Day #48","embed":"https://www.youtube.com/embed/RaG6GgcDt54","duration":637},{"description":"Unlock the power of file input/output (I/O) in Python. Learn how to read and write data to files, allowing you to store and retrieve information persistently. This lecture covers fundamental file handling concepts, including opening, reading, writing, and closing files.","title":"File IO in Python | Python Tutorial - Day #49","embed":"https://www.youtube.com/embed/eDBPlcWYses","duration":773},{"description":"Explore a variety of methods for reading data from files in Python. Learn how to use 'read()', 'readlines()', and other functions to access and manipulate file content. This lecture deepens your understanding of file handling and provides practical examples for data extraction.","title":"read(), readlines() and other methods | Python Tutorial - Day #50","embed":"https://www.youtube.com/embed/l1FsnQxET9U","duration":647},{"description":"Master the art of navigating file pointers with the 'seek()' and 'tell()' functions in Python. Learn how to move the file pointer to specific locations and retrieve its current position. This lecture provides a comprehensive understanding of file pointer manipulation and its applications.","title":"seek(), tell() and other functions | Python Tutorial - Day #51","embed":"https://www.youtube.com/embed/PByYX-2l5Us","duration":467},{"description":"Dive into the world of lambda functions, a concise way to define anonymous functions in Python. Learn how to create small, reusable functions without the need for formal definition. This lecture explores the syntax and applications of lambda functions, enhancing your code's expressiveness and conciseness.","title":"Lambda functions in Python | Python Tutorial - Day #52","embed":"https://www.youtube.com/embed/UfFWf-PXUqE","duration":558},{"description":"Explore the powerful 'map', 'filter', and 'reduce' functions in Python, which provide functional programming tools for transforming data. Learn how to apply functions to sequences, filter elements based on criteria, and reduce sequences to a single value.","title":"Map, Filter and Reduce in Python | Python Tutorial - Day #53","embed":"https://www.youtube.com/embed/OErhjT4f5Cs","duration":781},{"description":"Understand the difference between the 'is' and '==' operators in Python. This lecture clarifies the nuances of object identity and equality comparison, providing practical examples to illustrate their distinct behavior. You'll learn how to accurately check for both identity and equality in your programs.","title":"is' vs '==' in Python | Python Tutorial - Day #54","embed":"https://www.youtube.com/embed/TOemdfX_0xc","duration":481},{"description":"Put your Python skills to the test with Exercise 5: Snake Water Gun. You'll create a program that simulates the classic game of Snake, Water, and Gun, allowing users to play against the computer. This exercise challenges you to implement game logic, user input, and random number generation, providing a fun and engaging application of your Python skills.","title":"Exercise 5 - Snake Water Gun | Python Tutorial - Day #55","embed":"https://www.youtube.com/embed/dDsh7FT6-0I","duration":355},{"description":"Dive into the world of Object-Oriented Programming (OOP) in Python. Explore the fundamental concepts of classes and objects, which enable you to model real-world entities and create reusable code. This lecture provides an introduction to OOP and its benefits for building complex applications.","title":"Introduction to OOPs in Python | Python Tutorial - Day #56","embed":"https://www.youtube.com/embed/HQnoYzxOHMw","duration":954},{"description":"Explore the core elements of OOP: classes and objects in Python. Learn how to define classes, which act as blueprints for creating objects. You'll understand how to create instances of classes and access their attributes and methods.","title":"Classes and Objects in Python | Python Tutorial - Day #57","embed":"https://www.youtube.com/embed/a7baAGCBA9U","duration":572},{"description":"Delve into the concept of constructors in Python. Learn how to define special methods that initialize objects when they are created. This lecture covers the __init__ method and its role in setting initial values for object attributes.","title":"Constructors in Python | Python Tutorial - Day #58","embed":"https://www.youtube.com/embed/12HRkYld22c","duration":677},{"description":"Explore the powerful concept of decorators in Python. Learn how to use decorators to modify the behavior of functions and methods without changing their original code. This lecture showcases the syntax and applications of decorators, providing a concise and elegant way to add functionality to existing code.","title":"Decorators in Python | Python Tutorial - Day #59","embed":"https://www.youtube.com/embed/PTBZ674EsvI","duration":785},{"description":"Discover the importance of getters and setters in Python. Learn how to use these methods to control access to object attributes, ensuring data integrity and encapsulation. This lecture explains the principles behind getters and setters and their role in object-oriented design.","title":"Getters and Setters in Python | Python Tutorial - Day #60","embed":"https://www.youtube.com/embed/2gbCT8h9uyk","duration":637},{"description":"Dive into the concept of inheritance in Python. Learn how to create new classes that inherit properties and methods from existing classes, promoting code reuse and modularity. This lecture covers the fundamentals of inheritance and its benefits for building hierarchical relationships between classes.","title":"Inheritance in Python | Python Tutorial - Day #61","embed":"https://www.youtube.com/embed/-KsfUaQEY9Y","duration":454},{"description":"Explore access modifiers in Python, which control the visibility of attributes and methods within classes. Learn how to use the 'public', 'protected', and 'private' modifiers to define the scope of class members. This lecture clarifies the rules of access control and their impact on object-oriented design.","title":"Access Modifiers in Python | Python Tutorial - Day #62","embed":"https://www.youtube.com/embed/43FK20rWvKQ","duration":703},{"description":"This lecture provides a complete solution to Exercise 5: Snake Water Gun. We'll examine the code, analyze the logic, and discuss best practices. Additionally, we'll celebrate the achievements of all the participants who have been diligently following this Python tutorial.","title":"Snake Water Gun Game in Python - Exercise 5 - Solution | Python Tutorial - Day #63","embed":"https://www.youtube.com/embed/GkfBpm6MN9A","duration":928},{"description":"Put your Python skills to the test with Exercise 6: Library Management System. You'll create a program that simulates a simple library management system, allowing users to add, borrow, and return books. This exercise challenges you to implement data structures, user input, and file handling, providing a practical and real-world application of your Python skills.","title":"Exercise 6 - Library Management System in Python | Python Tutorial - Day #64","embed":"https://www.youtube.com/embed/mlDZTSH2FFc","duration":195},{"description":"Explore the concept of static methods in Python. Learn how to define methods that belong to a class rather than specific instances. This lecture clarifies the distinction between static methods and instance methods and showcases their applications in object-oriented design.","title":"Static Methods in Python | Python Tutorial - Day #65","embed":"https://www.youtube.com/embed/GcSVYNSsJxo","duration":457},{"description":"Dive into the differences between instance variables and class variables in Python. Learn how instance variables belong to specific objects, while class variables are shared among all instances of a class. This lecture clarifies the scope of variables and their implications for object-oriented programming.","title":"Instance variables vs Class variables in Python | Python Tutorial - Day #66","embed":"https://www.youtube.com/embed/tQdaeiF4j38","duration":877},{"description":"This lecture provides a complete solution to Exercise 6: Library Management System. We'll examine the code, analyze the logic, and discuss best practices. Additionally, we'll celebrate the achievements of all the participants who have been diligently following this Python tutorial.","title":"Exercise 6 Solution - Library Management Software in Python | Python Tutorial - Day #67","embed":"https://www.youtube.com/embed/uRIEjf2vCIg","duration":574},{"description":"Put your Python skills to the test with Exercise 7: Clear the Clutter. You'll create a program that analyzes a folder containing files and organizes them based on file types. This exercise challenges you to implement file system operations, data structures, and file handling, providing a practical and real-world application of your Python skills.","title":"Exercise 7 - Clear the Clutter | Python Tutorial - Day #68","embed":"https://www.youtube.com/embed/6KvnP13TnhY","duration":214},{"description":"Explore the concept of class methods in Python. Learn how to define methods that are associated with a class and can be called directly on the class itself. This lecture clarifies the distinction between class methods and instance methods and showcases their applications in object-oriented design.","title":"Class Methods in Python | Python Tutorial - Day #69","embed":"https://www.youtube.com/embed/9ynmDLc5FYo","duration":385},{"description":"Discover how to use class methods as alternative constructors in Python. This lecture explains how to define class methods that can create new instances of a class with different initialization parameters. This technique provides flexibility and allows for more specialized object creation.","title":"Class Methods as Alternative Constructors in Python | Python Tutorial - Day #70","embed":"https://www.youtube.com/embed/FGlKJdy--p8","duration":786},{"description":"Explore the powerful 'dir', '__dict__', and 'help' methods in Python. These methods provide introspection tools for examining objects and classes, allowing you to understand their attributes, methods, and documentation. This lecture empowers you to gain insights into the structure and behavior of your code.","title":"dir, __dict__ and help method in Python | Python Tutorial - Day #71","embed":"https://www.youtube.com/embed/Wgo9TaBcuJ4","duration":443},{"description":"Dive into the 'super' keyword in Python, a powerful tool for working with inheritance. Learn how to use 'super' to call methods from parent classes within child classes, promoting code reusability and maintaining the inheritance hierarchy.","title":"super keyword in Python | Python Tutorial - Day #72","embed":"https://www.youtube.com/embed/P648reefNh0","duration":548},{"description":"Explore the magic or dunder methods in Python. These special methods, identified by double underscores, enable you to customize the behavior of operators, attributes, and other aspects of your classes. This lecture provides a comprehensive understanding of magic methods and their applications.","title":"Magic/Dunder Methods in Python | Python Tutorial - Day #73","embed":"https://www.youtube.com/embed/DmgQVJXhuLQ","duration":732},{"description":"Delve into the concept of method overriding in Python. Learn how to redefine methods from parent classes within child classes, customizing the behavior of inherited methods. This lecture clarifies the process of overriding methods and its importance for customizing functionality.","title":"Method Overriding in Python | Python Tutorial - Day #74","embed":"https://www.youtube.com/embed/46_yfYC36JY","duration":387},{"description":"This lecture provides a complete solution to Exercise 7: Clear the Clutter. We'll examine the code, analyze the logic, and discuss best practices. Additionally, we'll celebrate the achievements of all the participants who have been diligently following this Python tutorial.","title":"Exercise 7 Solution + Shoutouts | Python Tutorial - Day #75","embed":"https://www.youtube.com/embed/Wt9Shnzv_Yg","duration":732},{"description":"Put your Python skills to the test with Exercise 8: Merge the PDF. You'll create a program that combines multiple PDF files into a single output file. This exercise challenges you to implement file system operations, external libraries, and PDF manipulation techniques, providing a practical and real-world application of your Python skills.","title":"Exercise 8 - Merge the PDF | Python Tutorial - Day #76","embed":"https://www.youtube.com/embed/uUbvJ7ZEhPE","duration":194},{"description":"Explore the concept of operator overloading in Python. Learn how to customize the behavior of operators, such as +, -, *, and /, when applied to your own classes. This lecture clarifies the principles of operator overloading and its applications for creating more intuitive and expressive code.","title":"Operator Overloading in Python | Python Tutorial - Day #77","embed":"https://www.youtube.com/embed/D67-b2t-y4k","duration":444},{"description":"Dive into the world of single inheritance in Python. Learn how to create a subclass that inherits properties and methods from a single parent class. This lecture covers the fundamental principles of single inheritance and its role in building object-oriented hierarchies.","title":"Single Inheritance in Python | Python Tutorial - Day #78","embed":"https://www.youtube.com/embed/U53_Gw55NI8","duration":279},{"description":"Expand your understanding of inheritance with multiple inheritance in Python. Learn how to create a subclass that inherits properties and methods from multiple parent classes. This lecture explores the concepts and advantages of multiple inheritance, allowing you to combine features from different parent classes.","title":"Multiple Inheritance in Python | Python Tutorial - Day #79","embed":"https://www.youtube.com/embed/4o7xSHgKlvI","duration":371},{"description":"Explore the concept of multilevel inheritance in Python. Learn how to create a hierarchy of classes where a subclass inherits from a parent class, which in turn inherits from another parent class. This lecture clarifies the relationships between multiple levels of inheritance and their applications in object-oriented design.","title":"Multilevel Inheritance in Python | Python Tutorial - Day #80","embed":"https://www.youtube.com/embed/Il7XMJJeXiA","duration":474},{"description":"Dive into the concepts of hybrid and hierarchical inheritance in Python. Learn how to combine different inheritance patterns, such as single, multiple, and multilevel inheritance, to create complex class hierarchies. This lecture provides a comprehensive understanding of advanced inheritance techniques and their applications in object-oriented programming.","title":"Hybrid and Hierarchical Inheritance in Python | Python Tutorial - Day #81","embed":"https://www.youtube.com/embed/B4Q8zxRkm_I","duration":534},{"description":"This lecture provides a complete solution to Exercise 8: Merge the Pdf. We'll examine the code, analyze the logic, and discuss best practices. Additionally, we'll celebrate the achievements of all the participants who have been diligently following this Python tutorial.","title":"Exercise 8 - Merge the Pdf Solution in Python | Python Tutorial - Day #82","embed":"https://www.youtube.com/embed/qKKGemhBRVM","duration":471},{"description":"This lecture celebrates the achievements of all the participants who have been diligently following this Python tutorial. We'll acknowledge everyone's hard work, dedication, and commitment to learning Python programming. This is a moment to appreciate the journey and the progress made together.","title":"Exercise 9 - Shoutouts to Everyone | Python Tutorial - Day #83","embed":"https://www.youtube.com/embed/1WjwnlRXfHc","duration":228},{"description":"Explore the powerful 'time' module in Python. Learn how to work with dates, times, and time intervals. This lecture covers essential functions for getting the current time, formatting dates and times, and calculating time differences. You'll gain a deeper understanding of time manipulation in Python.","title":"Time Module in Python | Python Tutorial - Day #84","embed":"https://www.youtube.com/embed/oTtIvV-Q1FY","duration":697},{"description":"Dive into the world of creating command-line utilities in Python. Learn how to write programs that can be executed from the command line, providing users with a text-based interface. This lecture covers essential concepts for building command-line tools, including argument parsing and interactive prompts.","title":"Creating command line utility in python | Python Tutorial - Day #85","embed":"https://www.youtube.com/embed/3IAu6-pgw7I","duration":1112},{"description":"Discover the convenient 'walrus operator' in Python. Learn how to assign a value to a variable and use it within the same expression. This operator enhances code conciseness and readability, especially when working with conditional statements and loops.","title":"Walrus Operator in Python | Python Tutorial - Day #86","embed":"https://www.youtube.com/embed/NCmMEEyzLT8","duration":576},{"description":"Explore the 'shutil' module in Python, a powerful tool for managing files and directories. Learn how to perform tasks like copying, moving, deleting, and renaming files and folders. This module provides a comprehensive suite of functions for interacting with the file system.","title":"Shutil Module in Python | Python Tutorial - Day #87","embed":"https://www.youtube.com/embed/wII2JhNACJE","duration":762},{"description":"This lecture provides a complete solution to Exercise 9: Shoutouts to Everyone. We'll examine the code, analyze the logic, and discuss best practices. Additionally, we'll celebrate the achievements of all the participants who have been diligently following this Python tutorial.","title":"Exercise 9: Solution - Shoutouts to Everyone | Python Tutorial - Day #88","embed":"https://www.youtube.com/embed/C9VP-56RXNM","duration":734},{"description":"Dive into the world of making HTTP requests in Python with the 'requests' module. Learn how to send GET, POST, PUT, and DELETE requests to web servers. This module simplifies web interaction, making it easy to retrieve data, send information, and interact with web services.","title":"Requests Module in Python | Python Tutorial - Day #89","embed":"https://www.youtube.com/embed/Nsb3bLIlO4w","duration":526},{"description":"Put your Python skills to the test with Exercise 10: News App. You'll create a program that fetches news headlines from a web API and displays them to the user. This exercise challenges you to implement web requests, data parsing, and user interface elements, providing a practical and real-world application of your Python skills.","title":"Exercise 10: News App in Python | Python Tutorial - Day #90","embed":"https://www.youtube.com/embed/BGzFp9mwFQ4","duration":274},{"description":"Dive into the world of generators in Python. Learn how to create functions that produce a sequence of values on demand, rather than storing them in memory. This lecture explores the concept of generators and their advantages for handling large datasets and improving memory efficiency.","title":"Generators in Python | Python Tutorial - Day #91","embed":"https://www.youtube.com/embed/ixd-u3pmsUc","duration":527},{"description":"Explore the concept of function caching in Python. Learn how to store the results of function calls in a cache, allowing for faster retrieval of previously computed values. This technique enhances performance by reducing redundant calculations, especially for computationally expensive functions.","title":"Function Caching in Python | Python Tutorial - Day #92","embed":"https://www.youtube.com/embed/K8gjSwc3Rlo","duration":674},{"description":"This lecture provides a complete solution to Exercise 10: News App. We'll examine the code, analyze the logic, and discuss best practices. Additionally, we'll celebrate the achievements of all the participants who have been diligently following this Python tutorial.","title":"Exercise 10 - News App Solution & Shoutout | Python Tutorial - Day #93","embed":"https://www.youtube.com/embed/bnAz7Kb2efE","duration":691},{"description":"Put your Python skills to the test with Exercise 11: Drink Water Reminder. You'll create a program that reminds the user to drink water at regular intervals. This exercise challenges you to implement desktop notifications, time scheduling, and user interaction, providing a practical and real-world application of your Python skills.","title":"Exercise 11 - Drink Water Reminder | Python Tutorial - Day #94","embed":"https://www.youtube.com/embed/1i4piFhpnm8","duration":260},{"description":"Dive into the world of regular expressions in Python. Learn how to use regular expressions (regex) to search, match, and manipulate text data. This lecture covers the fundamental syntax of regex and provides practical examples for pattern matching and text extraction.","title":"Regular Expressions in Python | Python Tutorial - Day #95","embed":"https://www.youtube.com/embed/TCWOwavqFrw","duration":783},{"description":"Explore the 'asyncio' library in Python, which enables you to write asynchronous code that can handle multiple tasks concurrently. This lecture covers the basics of asynchronous programming and showcases the benefits of using 'asyncio' for improving responsiveness and handling I/O operations efficiently.","title":"AsyncIO in Python | Python Tutorial - Day #96","embed":"https://www.youtube.com/embed/lgoB3_-ejnI","duration":629},{"description":"Dive into the world of multithreading in Python. Learn how to execute multiple threads of execution concurrently, allowing you to perform tasks in parallel and improve program efficiency. This lecture covers the essential concepts and techniques for multithreading, enhancing your understanding of concurrent programming.","title":"Multithreading in Python | Python Tutorial - Day #97","embed":"https://www.youtube.com/embed/ICbU6zAKtqQ","duration":1069},{"description":"Explore the concept of multiprocessing in Python. Learn how to create multiple processes that can run independently on different CPU cores, providing significant speedups for computationally intensive tasks. This lecture covers the fundamental principles and techniques for multiprocessing, expanding your knowledge of concurrent programming.","title":"MultiProcessing in Python | Python Tutorial - Day #98","embed":"https://www.youtube.com/embed/zGe-9LfnAaA","duration":1204},{"description":"This lecture provides a complete solution to Exercise 11: Drink Water Reminder. We'll examine the code, analyze the logic, and discuss best practices. Additionally, we'll celebrate the achievements of all the participants who have been diligently following this Python tutorial.","title":"Exercise 11: Solution + Shoutouts - Desktop Notification System | Python Tutorial - Day #99","embed":"https://www.youtube.com/embed/18vZnLqXMoM","duration":606},{"description":"This lecture concludes our Python journey. We'll reflect on the skills learned, the projects completed, and the progress made. We'll also discuss future learning paths and resources for continued growth in Python programming. This is a time to celebrate achievements and embrace the exciting world of Python development.","title":"Conclusion and Where to go from here | Python Tutorial - Day #100","embed":"https://www.youtube.com/embed/5Pz8WGiMJ_c","duration":999}],"name":"Python Programming Bootcamp","overview":"This comprehensive Python bootcamp is designed for beginners, covering everything from the fundamentals of programming to advanced concepts like object-oriented programming, multithreading, and web development. This bootcamp will guide you through practical exercises, real-world projects, and engaging lectures to help you master Python programming.","category":"programming","level":"beginner"},"author":"CodeWithHarry","channel":"https://www.youtube.com/channel/UCeVMnSShP_Iviwkknt83cww","duration":64632}